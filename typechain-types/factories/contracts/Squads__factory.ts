/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Squads, SquadsInterface } from "../../contracts/Squads";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "subscriptionToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "referralManager_",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingContract_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "squadMembers",
        type: "uint256",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "SquadActivityChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "squadCount",
        type: "uint256",
      },
    ],
    name: "SquadFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subscriptionCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakingThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "squadSize",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakingPlanId",
        type: "uint256",
      },
    ],
    name: "SquadPlanCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Subscribed",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBSCRIPTION_PERIOD_DAYS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionCost_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingThreshold_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "squadSize_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingPlanId_",
        type: "uint256",
      },
    ],
    name: "addPlan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlans",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "subscriptionCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakingThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "squadSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakingPlanId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct Squads.SquadPlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getSufficientPlanIdByStakingAmount",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSquadInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "subscription",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "squadsFilled",
                type: "uint256",
              },
            ],
            internalType: "struct Squads.Squad",
            name: "squadStatus",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "subscriptionCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "stakingThreshold",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "squadSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "stakingPlanId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isActive",
                type: "bool",
              },
            ],
            internalType: "struct Squads.SquadPlan",
            name: "plan",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "members",
            type: "address[]",
          },
        ],
        internalType: "struct Squads.UserSquadInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
    ],
    name: "getUserSquadMembers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSquadsInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "subscription",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "squadsFilled",
                type: "uint256",
              },
            ],
            internalType: "struct Squads.Squad",
            name: "squadStatus",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "subscriptionCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "stakingThreshold",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "squadSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "stakingPlanId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isActive",
                type: "bool",
              },
            ],
            internalType: "struct Squads.SquadPlan",
            name: "plan",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "members",
            type: "address[]",
          },
        ],
        internalType: "struct Squads.UserSquadInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "plans",
    outputs: [
      {
        internalType: "uint256",
        name: "subscriptionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "squadSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingPlanId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralManager",
    outputs: [
      {
        internalType: "contract IReferralManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContract",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionToken",
    outputs: [
      {
        internalType: "contract ERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakingPlanId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tryToAddMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "updatePlanActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "updatePlanReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "updatePlanSquadSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingPlanId",
        type: "uint256",
      },
    ],
    name: "updatePlanStakingId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "updatePlanStakingThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionCost",
        type: "uint256",
      },
    ],
    name: "updatePlanSubscriptionCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingContract_",
        type: "address",
      },
    ],
    name: "updateStakingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numDays",
        type: "uint256",
      },
    ],
    name: "updateSubscriptionPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referralManager_",
        type: "address",
      },
    ],
    name: "updateSubscriptionReferralManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "updateSubscriptionToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
    ],
    name: "userHasPlanSubscription",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
    ],
    name: "userHasSufficientStaking",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261016d6001553480156200001757600080fd5b506040516200228e3803806200228e8339810160408190526200003a9162000184565b6001600160a01b0383166200004e57600080fd5b6001600160a01b0382166200006257600080fd5b6001600160a01b0381166200007657600080fd5b62000083600033620000c6565b600580546001600160a01b039485166001600160a01b031991821617909155600680549385169382169390931790925560078054919093169116179055620001ce565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000163576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001223390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b80516001600160a01b03811681146200017f57600080fd5b919050565b6000806000606084860312156200019a57600080fd5b620001a58462000167565b9250620001b56020850162000167565b9150620001c56040850162000167565b90509250925092565b6120b080620001de6000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063736560b51161011a578063afea5d55116100ad578063d6672e1c1161007c578063d6672e1c146104b9578063d94a862b146104cc578063d966edf0146104e1578063ee99205c146104f4578063fcc475121461050757600080fd5b8063afea5d551461043e578063b162061614610451578063ca7c101314610493578063d547741f146104a657600080fd5b8063a217fddf116100e9578063a217fddf146103fa578063a243d5ac14610402578063aaa138a214610415578063ad0839281461041e57600080fd5b8063736560b5146103ae57806388da0f13146103c157806391d14854146103d4578063992dc2da146103e757600080fd5b80632f2ff15d116101925780633fe90537116101615780633fe905371461033157806342ec14d714610344578063622f46a4146103575780636445c6791461037757600080fd5b80632f2ff15d146102e55780632fe00f57146102f85780633347e4d61461030b57806336568abe1461031e57600080fd5b80631c0e0612116101ce5780631c0e0612146102645780631e6f30cb14610277578063248a9ca3146102975780632ccd9623146102ba57600080fd5b806301ffc9a7146102005780630f574ba71461022857806316867cd81461023d578063188ec3561461025e575b600080fd5b61021361020e3660046119d5565b61051a565b60405190151581526020015b60405180910390f35b61023b6102363660046119ff565b610551565b005b61025061024b3660046119ff565b6107ac565b60405190815260200161021f565b42610250565b61023b610272366004611a26565b610805565b61028a610285366004611a72565b61088d565b60405161021f9190611b57565b6102506102a53660046119ff565b60009081526020819052604090206001015490565b6006546102cd906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b61023b6102f3366004611a72565b6109cf565b61023b610306366004611b6a565b6109f9565b61023b610319366004611b8c565b610a32565b61023b61032c366004611a72565b610a60565b61023b61033f366004611b6a565b610ade565b61023b610352366004611b8c565b610b13565b61036a610365366004611b8c565b610b41565b60405161021f9190611ba7565b610213610385366004611c09565b60009081526003602090815260408083206001600160a01b039490941683529290522054421090565b61023b6103bc3660046119ff565b610be5565b61023b6103cf366004611c33565b610bf6565b6102136103e2366004611a72565b610d9e565b6102136103f5366004611c09565b610dc7565b610250600081565b61023b610410366004611b8c565b610f2f565b61025060015481565b61043161042c366004611c09565b610f5d565b60405161021f9190611c6e565b61021361044c366004611cbb565b610fdb565b61046461045f3660046119ff565b611368565b6040805196875260208701959095529385019290925260608401526080830152151560a082015260c00161021f565b61023b6104a1366004611b6a565b6113b1565b61023b6104b4366004611a72565b6113ea565b6005546102cd906001600160a01b031681565b6104d461140f565b60405161021f9190611cff565b61023b6104ef366004611b6a565b6114a9565b6007546102cd906001600160a01b031681565b61023b610515366004611b6a565b6114e2565b60006001600160e01b03198216637965db0b60e01b148061054b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600254811061059b5760405162461bcd60e51b8152602060048201526011602482015270125b98dbdc9c9958dd081c1b185b881a59607a1b60448201526064015b60405180910390fd5b60003390506000600283815481106105b5576105b5611d78565b60009182526020909120600690910201600581015490915060ff166106115760405162461bcd60e51b8152602060048201526012602482015271506c616e206973206e6f742061637469766560701b6044820152606401610592565b600554815460405163079cc67960e41b81526001600160a01b03858116600483015260248201929092529116906379cc679090604401600060405180830381600087803b15801561066157600080fd5b505af1158015610675573d6000803e3d6000fd5b5060009250610682915050565b6040519080825280602002602001820160405280156106ab578160200160208202803683370190505b5060008481526004602090815260408083206001600160a01b0387168452825290912082516106e093919291909101906118f0565b5060004260008581526003602090815260408083206001600160a01b0388168452909152902054106107345760008481526003602090815260408083206001600160a01b0387168452909152902054610736565b425b9050600154620151806107499190611dba565b6107539082611dd9565b60008581526003602090815260408083206001600160a01b03881680855292528083209390935591518392879290917ff94991dcbea6e8ac439cbc93bd9c62a4d39f04e0ad656df9a703f13552c2787f9190a450505050565b6000600019815b6002548110156107fe57600281815481106107d0576107d0611d78565b90600052602060002090600602016002015484106107ec578091505b806107f681611df1565b9150506107b3565b5092915050565b60006108108161151b565b816002848154811061082457610824611d78565b906000526020600020906006020160050160006101000a81548160ff021916908315150217905550827f6da7bc8b01ce6d2ed854278dbb7c80b2cae78c297ec593d38c15b3d4445985a883604051610880911515815260200190565b60405180910390a2505050565b610895611955565b60008381526003602090815260408083206001600160a01b03861684528252808320815180830190925280548252600101549181019190915260028054919291869081106108e5576108e5611d78565b600091825260208083206040805160c08101825260069094029091018054845260018101548484015260028101548483015260038101546060850152600480820154608086015260059091015460ff16151560a085015289855282528084206001600160a01b038916855282528084208054825181850281018501909352808352939550909290918301828280156109a657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610988575b505060408051606081018252978852602088019690965250505091830191909152509392505050565b6000828152602081905260409020600101546109ea8161151b565b6109f48383611528565b505050565b6000610a048161151b565b8160028481548110610a1857610a18611d78565b906000526020600020906006020160010181905550505050565b6000610a3d8161151b565b50600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381163314610ad05760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610592565b610ada82826115ac565b5050565b6000610ae98161151b565b8160028481548110610afd57610afd611d78565b6000918252602090912060069091020155505050565b6000610b1e8161151b565b50600680546001600160a01b0319166001600160a01b0392909216919091179055565b60025460609060009067ffffffffffffffff811115610b6257610b62611d8e565b604051908082528060200260200182016040528015610b9b57816020015b610b88611955565b815260200190600190039081610b805790505b50905060005b6002548110156107fe57610bb5818561088d565b828281518110610bc757610bc7611d78565b60200260200101819052508080610bdd90611df1565b915050610ba1565b6000610bf08161151b565b50600155565b6000610c018161151b565b6040805160c081018252878152602081018781529181018681526060820186815260808301868152600160a08501818152600280548084018255600082905287517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace60069092029182015597517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf89015594517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad088015592517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad187015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad286015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad3909401805460ff191694151594909417909355549091610d4691611e0c565b604080518981526020810189905290810187905260608101869052608081018590527f3beeb65995b90bd0914666101e05dd847e837c47b2f0d4da8882c34ea27c91309060a00160405180910390a250505050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6007546002805460009283926001600160a01b03909116916314ce783d919086908110610df657610df6611d78565b906000526020600020906006020160040154866040518363ffffffff1660e01b8152600401610e389291909182526001600160a01b0316602082015260400190565b600060405180830381865afa158015610e55573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e7d9190810190611e7d565b905060005b8151811015610f245742828281518110610e9e57610e9e611d78565b602002602001015160400151118015610ed25750818181518110610ec457610ec4611d78565b602002602001015160c00151155b8015610f02575083610f00838381518110610eef57610eef611d78565b6020026020010151600001516107ac565b145b15610f125760019250505061054b565b80610f1c81611df1565b915050610e82565b506000949350505050565b6000610f3a8161151b565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b60008181526004602090815260408083206001600160a01b0386168452825291829020805483518184028101840190945280845260609392830182828015610fce57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610fb0575b5050505050905092915050565b60006001600160a01b0384166110335760405162461bcd60e51b815260206004820152601860248201527f5265666572726572206973207a65726f206164647265737300000000000000006044820152606401610592565b6001600160a01b0383166110825760405162461bcd60e51b81526020600482015260166024820152754d656d626572206973207a65726f206164647265737360501b6044820152606401610592565b600061108d836107ac565b9050600081121561109d57600080fd5b600081905086600282815481106110b6576110b6611d78565b906000526020600020906006020160040154146111155760405162461bcd60e51b815260206004820152601960248201527f5374616b696e6720706c616e20646f206e6f74206d61746368000000000000006044820152606401610592565b6007546001600160a01b031633148015611150575060008181526003602090815260408083206001600160a01b038a16845290915290205442105b801561116157506111618682610dc7565b80156111755750611173868287611611565b155b156113595760008181526004602090815260408083206001600160a01b038a811680865291845282852080546001810182558187528587200180546001600160a01b031916928c169283179055948290529354825194855292840183905291928492917f4727d8bf558b6f2fd2d2f66e2062e0c408a4b470870a0385e940358a87ad3626910160405180910390a36002828154811061121657611216611d78565b906000526020600020906006020160030154811061134d5760008281526003602090815260408083206001600160a01b038b16845290915281206001808201805492939192909190611269908490611dd9565b909155505060008155600654600280546001600160a01b0390921691633fb55c61918b918790811061129d5761129d611d78565b60009182526020909120600160069092020101546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156112f757600080fd5b505af115801561130b573d6000803e3d6000fd5b50505050806001015483896001600160a01b03167fc22bc73345a19ca25692353736ee8587e0e2d12c75a1ed016950ed4b20fac30160405160405180910390a4505b60019350505050611360565b6000925050505b949350505050565b6002818154811061137857600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549395509193909260ff1686565b60006113bc8161151b565b81600284815481106113d0576113d0611d78565b906000526020600020906006020160040181905550505050565b6000828152602081905260409020600101546114058161151b565b6109f483836115ac565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156114a05760008481526020908190206040805160c08101825260068602909201805483526001808201548486015260028201549284019290925260038101546060840152600481015460808401526005015460ff16151560a08301529083529092019101611433565b50505050905090565b60006114b48161151b565b81600284815481106114c8576114c8611d78565b906000526020600020906006020160020181905550505050565b60006114ed8161151b565b816002848154811061150157611501611d78565b906000526020600020906006020160030181905550505050565b61152581336116f0565b50565b6115328282610d9e565b610ada576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556115683390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6115b68282610d9e565b15610ada576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008281526004602090815260408083206001600160a01b038716845282528083208054825181850281018501909352808352849383018282801561167f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611661575b5050505050905060005b81518110156116e257836001600160a01b03168282815181106116ae576116ae611d78565b60200260200101516001600160a01b031614156116d0576001925050506116e9565b806116da81611df1565b915050611689565b5060009150505b9392505050565b6116fa8282610d9e565b610ada57611712816001600160a01b03166014611754565b61171d836020611754565b60405160200161172e929190611fbb565b60408051601f198184030181529082905262461bcd60e51b825261059291600401612030565b60606000611763836002611dba565b61176e906002611dd9565b67ffffffffffffffff81111561178657611786611d8e565b6040519080825280601f01601f1916602001820160405280156117b0576020820181803683370190505b509050600360fc1b816000815181106117cb576117cb611d78565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106117fa576117fa611d78565b60200101906001600160f81b031916908160001a905350600061181e846002611dba565b611829906001611dd9565b90505b60018111156118a1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061185d5761185d611d78565b1a60f81b82828151811061187357611873611d78565b60200101906001600160f81b031916908160001a90535060049490941c9361189a81612063565b905061182c565b5083156116e95760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610592565b828054828255906000526020600020908101928215611945579160200282015b8281111561194557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611910565b506119519291506119c0565b5090565b6040805160a081019091526000606082018181526080830191909152819081526020016119b36040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b8152602001606081525090565b5b8082111561195157600081556001016119c1565b6000602082840312156119e757600080fd5b81356001600160e01b0319811681146116e957600080fd5b600060208284031215611a1157600080fd5b5035919050565b801515811461152557600080fd5b60008060408385031215611a3957600080fd5b823591506020830135611a4b81611a18565b809150509250929050565b80356001600160a01b0381168114611a6d57600080fd5b919050565b60008060408385031215611a8557600080fd5b82359150611a9560208401611a56565b90509250929050565b600061012080840183518051865260208082015181880152808601519150611b006040880183805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a0810151151560a08301525050565b6040860151610100880194909452835192839052610140870193810192600092505b80831015611b4b5783516001600160a01b03168552938101939281019260019290920191611b22565b50929695505050505050565b6020815260006116e96020830184611a9e565b60008060408385031215611b7d57600080fd5b50508035926020909101359150565b600060208284031215611b9e57600080fd5b6116e982611a56565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611bfc57603f19888603018452611bea858351611a9e565b94509285019290850190600101611bce565b5092979650505050505050565b60008060408385031215611c1c57600080fd5b611c2583611a56565b946020939093013593505050565b600080600080600060a08688031215611c4b57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6020808252825182820181905260009190848201906040850190845b81811015611caf5783516001600160a01b031683529284019291840191600101611c8a565b50909695505050505050565b60008060008060808587031215611cd157600080fd5b84359350611ce160208601611a56565b9250611cef60408601611a56565b9396929550929360600135925050565b6020808252825182820181905260009190848201906040850190845b81811015611caf57611d65838551805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a0810151151560a08301525050565b9284019260c09290920191600101611d1b565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611dd457611dd4611da4565b500290565b60008219821115611dec57611dec611da4565b500190565b6000600019821415611e0557611e05611da4565b5060010190565b600082821015611e1e57611e1e611da4565b500390565b60405160e0810167ffffffffffffffff81118282101715611e4657611e46611d8e565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e7557611e75611d8e565b604052919050565b60006020808385031215611e9057600080fd5b825167ffffffffffffffff80821115611ea857600080fd5b818501915085601f830112611ebc57600080fd5b815181811115611ece57611ece611d8e565b611edc848260051b01611e4c565b818152848101925060e0918202840185019188831115611efb57600080fd5b938501935b82851015611f7f5780858a031215611f185760008081fd5b611f20611e23565b85518152868601518782015260408087015190820152606080870151908201526080808701519082015260a080870151611f5981611a18565b9082015260c086810151611f6c81611a18565b9082015284529384019392850192611f00565b50979650505050505050565b60005b83811015611fa6578181015183820152602001611f8e565b83811115611fb5576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611ff3816017850160208801611f8b565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612024816028840160208801611f8b565b01602801949350505050565b602081526000825180602084015261204f816040850160208701611f8b565b601f01601f19169190910160400192915050565b60008161207257612072611da4565b50600019019056fea26469706673582212205d2c323225e3782b1a263c4fc92f2d0ab62efb15192bd901e414df723843f08a64736f6c634300080b0033";

type SquadsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SquadsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Squads__factory extends ContractFactory {
  constructor(...args: SquadsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    subscriptionToken_: PromiseOrValue<string>,
    referralManager_: PromiseOrValue<string>,
    stakingContract_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Squads> {
    return super.deploy(
      subscriptionToken_,
      referralManager_,
      stakingContract_,
      overrides || {}
    ) as Promise<Squads>;
  }
  override getDeployTransaction(
    subscriptionToken_: PromiseOrValue<string>,
    referralManager_: PromiseOrValue<string>,
    stakingContract_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionToken_,
      referralManager_,
      stakingContract_,
      overrides || {}
    );
  }
  override attach(address: string): Squads {
    return super.attach(address) as Squads;
  }
  override connect(signer: Signer): Squads__factory {
    return super.connect(signer) as Squads__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SquadsInterface {
    return new utils.Interface(_abi) as SquadsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Squads {
    return new Contract(address, _abi, signerOrProvider) as Squads;
  }
}
