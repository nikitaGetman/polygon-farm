/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token1_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token2_",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardPool_",
        type: "address",
      },
      {
        internalType: "address",
        name: "referralManager_",
        type: "address",
      },
      {
        internalType: "address",
        name: "squadsManager_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "ActivityChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isToken2",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isToken2",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPercent",
        type: "uint256",
      },
    ],
    name: "StakingPlanCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
    ],
    name: "Subscribed",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_STAKE_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTS_DIVIDER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIME_STEP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitPercent",
        type: "uint256",
      },
    ],
    name: "addStakingPlan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "calculateStakeProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isToken2",
        type: "bool",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "getAvailableStakeReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingPlans",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "subscriptionCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "subscriptionDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profitPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakesToken1No",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakesToken2No",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakedToken1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakedToken2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken1Locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken2Locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClaimed",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.StakingPlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserPlanInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken1Staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken2Staked",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSubscribed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "subscribedTill",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.UserStakingInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserPlansInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken1Staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken2Staked",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSubscribed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "subscribedTill",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.UserStakingInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserStakes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profitPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isToken2",
            type: "bool",
          },
        ],
        internalType: "struct IStaking.Stake[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserStakesWithRewards",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeStart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeEnd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "profitPercent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "profit",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isClaimed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isToken2",
                type: "bool",
              },
            ],
            internalType: "struct IStaking.Stake",
            name: "stake",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.StakeWithRewardsInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasAnySubscription",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasSubscription",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralManager",
    outputs: [
      {
        internalType: "contract IReferralManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldAddReferrerOnToken2Stake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "squadsManager",
    outputs: [
      {
        internalType: "contract ISquads",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakingPlans",
    outputs: [
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "subscriptionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitPercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakesToken1No",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakesToken2No",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakedToken1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakedToken2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentToken1Locked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentToken2Locked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalClaimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract ERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token2",
    outputs: [
      {
        internalType: "contract ERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minLimit_",
        type: "uint256",
      },
    ],
    name: "updateMinStakeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "divider_",
        type: "uint256",
      },
    ],
    name: "updatePercentDivider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "updatePlanActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "updatePlanDurationDays",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "updatePlanReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    name: "updatePlanSubscriptionCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionDuration",
        type: "uint256",
      },
    ],
    name: "updatePlanSubscriptionPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referralManager_",
        type: "address",
      },
    ],
    name: "updateReferralManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress_",
        type: "address",
      },
    ],
    name: "updateRewardPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "updateShouldAddReferrerOnToken2Stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "squadsManager_",
        type: "address",
      },
    ],
    name: "updateSquadsManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "step_",
        type: "uint256",
      },
    ],
    name: "updateTimeStep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token1_",
        type: "address",
      },
    ],
    name: "updateToken1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token2_",
        type: "address",
      },
    ],
    name: "updateToken2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526103e86003556201518060045567016345785d8a00006005553480156200002a57600080fd5b5060405162003118380380620031188339810160408190526200004d91620001d8565b6001600160a01b0385166200006157600080fd5b6001600160a01b0384166200007557600080fd5b6001600160a01b0383166200008957600080fd5b6001600160a01b0382166200009d57600080fd5b620000aa6000336200011a565b600a80546001600160a01b03199081166001600160a01b039586161790915560068054610100600160a81b03191661010097861697909702969096179095556007805486169484169490941790935560088054851691831691909117905560098054909316911617905562000248565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620001b7576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001763390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b80516001600160a01b0381168114620001d357600080fd5b919050565b600080600080600060a08688031215620001f157600080fd5b620001fc86620001bb565b94506200020c60208701620001bb565b93506200021c60408701620001bb565b92506200022c60608701620001bb565b91506200023c60808701620001bb565b90509295509295909350565b612ec080620002586000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80637213fe4711610151578063b652b28c116100c3578063d547741f11610087578063d547741f146105ef578063d5fbac3a14610602578063dce4b29b14610615578063e256617314610628578063ed10dda314610631578063fcd0cad71461064457600080fd5b8063b652b28c1461058b578063bac1d2b51461059e578063c7852153146105b1578063cd69d3d9146105c4578063d21220a7146105d757600080fd5b8063a217fddf11610115578063a217fddf1461052a578063ad6299bc14610532578063ae1f267c14610545578063ae1fc32414610558578063afa830851461056b578063b3ea1e7c1461057857600080fd5b80637213fe4714610463578063762e7a34146104835780637c67b339146104f157806391d148541461050457806395319e231461051757600080fd5b80632ccd9623116101ea5780633bb2c773116101ae5780633bb2c773146103e25780633fe90537146103f7578063441a3e701461040a578063458f3bb01461041d578063472b0b6814610430578063717f90071461045057600080fd5b80632ccd96231461038d5780632f2ff15d146103a05780632fe00f57146103b357806332bc298c146103c657806336568abe146103cf57600080fd5b806316c51a371161023c57806316c51a3714610300578063188ec356146103135780631c0e061214610319578063248a9ca31461032c57806325be124e1461034f5780632968f6161461037a57600080fd5b806301c234a81461027957806301ffc9a714610295578063064e6780146102b85780630f574ba7146102cd57806314ce783d146102e0575b600080fd5b61028260035481565b6040519081526020015b60405180910390f35b6102a86102a3366004612869565b610664565b604051901515815260200161028c565b6102cb6102c63660046128a8565b61069b565b005b6102cb6102db3660046128c5565b6106cf565b6102f36102ee3660046128de565b610882565b60405161028c9190612956565b6102cb61030e3660046129a4565b61094a565b42610282565b6102cb6103273660046129e4565b610c86565b61028261033a3660046128c5565b60009081526020819052604090206001015490565b600754610362906001600160a01b031681565b6040516001600160a01b03909116815260200161028c565b6102cb610388366004612a09565b610d00565b600854610362906001600160a01b031681565b6102cb6103ae3660046128de565b6115c5565b6102cb6103c1366004612a53565b6115ef565b61028260045481565b6102cb6103dd3660046128de565b611628565b6103ea6116a6565b60405161028c9190612a75565b6102cb610405366004612a53565b611781565b6102cb610418366004612a53565b6117ba565b61028261042b366004612b30565b611aa7565b61044361043e3660046128a8565b611afb565b60405161028c9190612b68565b6102cb61045e3660046128c5565b611bd2565b6104766104713660046128de565b611be3565b60405161028c9190612bd7565b6104966104913660046128c5565b611dc7565b604080519c15158d5260208d019b909b52998b019890985260608a0196909652608089019490945260a088019290925260c087015260e08601526101008501526101208401526101408301526101608201526101800161028c565b6102cb6104ff3660046128a8565b611e3b565b6102a86105123660046128de565b611e69565b6102cb610525366004612c23565b611e92565b610282600081565b6102a86105403660046128a8565b611eb1565b610282610553366004612a53565b611ef2565b6102cb6105663660046128a8565b611f38565b6006546102a89060ff1681565b6102cb6105863660046128c5565b611f66565b6102a86105993660046128de565b611f77565b6102cb6105ac366004612a53565b611fa4565b6102cb6105bf366004612a53565b611fdd565b6102cb6105d23660046128a8565b612016565b6006546103629061010090046001600160a01b031681565b6102cb6105fd3660046128de565b612044565b6102cb6106103660046128a8565b612069565b6102cb6106233660046128c5565b612097565b61028260055481565b600954610362906001600160a01b031681565b6106576106523660046128de565b6120a8565b60405161028c9190612c40565b60006001600160e01b03198216637965db0b60e01b148061069557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006106a68161214c565b50600680546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6000600182815481106106e4576106e4612c7b565b60009182526020909120600c90910201805490915060ff1661074d5760405162461bcd60e51b815260206004820152601a60248201527f5374616b696e6720706c616e206973206e6f742061637469766500000000000060448201526064015b60405180910390fd5b60065461010090046001600160a01b03166379cc67903360018401546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156107af57600080fd5b505af11580156107c3573d6000803e3d6000fd5b5050505060006107d04290565b600084815260026020908152604080832033845290915290206001015410610814576000838152600260209081526040808320338452909152902060010154610816565b425b9050600454826002015461082a9190612ca7565b6108349082612cc6565b60008481526002602090815260408083203380855292528083206001019390935591518592917f4b90d6788928d63c1821907a6a8b95f40d26562d8fe41b105f7489db9966dfcb91a3505050565b60008281526002602090815260408083206001600160a01b03851684528252808320805482518185028101850190935280835260609492939192909184015b8282101561093e5760008481526020908190206040805160e08101825260068602909201805483526001808201548486015260028201549284019290925260038101546060840152600481015460808401526005015460ff808216151560a085015261010090910416151560c083015290835290920191016108c1565b50505050905092915050565b60006109558161214c565b6000831161099d5760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a10323ab930ba34b7b760591b6044820152606401610744565b600082116109ed5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e742070726f6669742070657263656e7400000000006044820152606401610744565b60408051610180810182526001808252602082018881529282018781526060830187815260808401878152600060a0860181815260c0870182815260e0880183815261010089018481526101208a018581526101408b018681526101608c018781528b54808d018d55978c90528c517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600c909902988901805460ff19169115159190911790559c517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf788015598517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf887015596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf986015594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa85015591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb840155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfc830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfd82015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfe82015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cff82015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0d0082015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0d019093019290925581549091610c4591612cde565b60408051868152602081018690527fb25951144c8a6e80eb675cb14ec779e73bd8f06dc10471b7074332d38cbf9af5910160405180910390a2505050505050565b6000610c918161214c565b8160018481548110610ca557610ca5612c7b565b6000918252602091829020600c90910201805460ff191692151592909217909155604051831515815284917fbfb8d33fd9f7cfe605f8368d0791b6bc475b77345c7c022bbe2aecf8c21ba243910160405180910390a2505050565b60018481548110610d1357610d13612c7b565b60009182526020909120600c909102015460ff16610d735760405162461bcd60e51b815260206004820152601a60248201527f5374616b696e6720706c616e206973206e6f74206163746976650000000000006044820152606401610744565b610d7d8433611f77565b610dc25760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba1039bab139b1b934b132b960511b6044820152606401610744565b600554831015610e205760405162461bcd60e51b8152602060048201526024808201527f5374616b6520616d6f756e74206c657373207468616e206d696e696d756d2076604482015263616c756560e01b6064820152608401610744565b6001600160a01b038116331415610e795760405162461bcd60e51b815260206004820152601a60248201527f52656665727265722063616e206e6f742062652073656e6465720000000000006044820152606401610744565b6000610e858585611ef2565b600654600a546040516370a0823160e01b81526001600160a01b03918216600482015292935061010090910416906370a0823190602401602060405180830381865afa158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd9190612cf5565b811115610f4c5760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f75676820746f6b656e7320666f7220726577617264000000006044820152606401610744565b8215610fc9576007546001600160a01b03166379cc6790336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101879052604401600060405180830381600087803b158015610fac57600080fd5b505af1158015610fc0573d6000803e3d6000fd5b50505050611059565b60065461010090046001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018790526064016020604051808303816000875af1158015611033573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110579190612d0e565b505b600654600a546040516323b872dd60e01b81526001600160a01b0391821660048201523060248201526044810184905261010090920416906323b872dd906064016020604051808303816000875af11580156110b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dd9190612d0e565b506000600186815481106110f3576110f3612c7b565b60009182526020808320898452600290915260408320600c909202019250816111193390565b6001600160a01b03166001600160a01b03168152602001908152602001600020905060006040518060e001604052808881526020016111554290565b8152602001600454856003015461116c9190612ca7565b6111769042612cc6565b81526004808601546020808401919091526040808401899052600060608086018290528c158015608097880152895460018181018c558b85529386902089516006909202019081559488015192850192909255918601516002840155908501516003830155928401519181019190915560a08301516005909101805460c085015115156101000261ff00199315159390931661ffff199091161791909117905590915061128e57868260040160008282546112319190612cc6565b925050819055508683600801600082825461124c9190612cc6565b925050819055508683600a0160008282546112679190612cc6565b9250508190555060018360060160008282546112839190612cc6565b909155506112fa9050565b868260030160008282546112a29190612cc6565b92505081905550868360070160008282546112bd9190612cc6565b92505081905550868360090160008282546112d89190612cc6565b9250508190555060018360050160008282546112f49190612cc6565b90915550505b851580611309575060065460ff165b15611557576008546000906001600160a01b03166336144c9a336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138b9190612d2b565b90506001600160a01b0381161580156113ac57506001600160a01b03861615155b156114a3576008546001600160a01b031663f8d0e6ec336040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529089166024820152604401600060405180830381600087803b15801561140c57600080fd5b505af1158015611420573d6000803e3d6000fd5b50506008546001600160a01b031691506336144c9a9050336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561147c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a09190612d2b565b90505b6114af8933878b612159565b6009546001600160a01b031615611555576009546001600160a01b031663afea5d558a83336040516001600160e01b031960e086901b16815260048101939093526001600160a01b039182166024840152166044820152606481018b90526084016020604051808303816000875af115801561152f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115539190612d0e565b505b505b815461156590600190612cde565b815160808084015160c0850151604080519485526020850192909252151583820152426060840152518b9233927f42ca3e556bfff174f2df01f4d630ae56cd8a109430c8058a83541d2f8949f64f92918290030190a45050505050505050565b6000828152602081905260409020600101546115e08161214c565b6115ea8383612486565b505050565b60006115fa8161214c565b816001848154811061160e5761160e612c7b565b90600052602060002090600c020160040181905550505050565b6001600160a01b03811633146116985760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610744565b6116a2828261250a565b5050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156117785760008481526020908190206040805161018081018252600c8602909201805460ff1615158352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460a0840152600681015460c0840152600781015460e084015260088101546101008401526009810154610120840152600a810154610140840152600b015461016083015290835290920191016116ca565b50505050905090565b600061178c8161214c565b81600184815481106117a0576117a0612c7b565b90600052602060002090600c020160010181905550505050565b6000600183815481106117cf576117cf612c7b565b60009182526020808320868452600290915260408320600c909202019250816117f53390565b6001600160a01b03166001600160a01b031681526020019081526020016000209050600081600001848154811061182e5761182e612c7b565b60009182526020909120600690910201600581015490915060ff16156118965760405162461bcd60e51b815260206004820152601860248201527f5374616b6520697320616c726561647920636c61696d656400000000000000006044820152606401610744565b42816002015411156118e35760405162461bcd60e51b815260206004820152601660248201527514dd185ad9481a5cc81b9bdd081c9958591e481e595d60521b6044820152606401610744565b60006118ee8261256f565b60058301805460ff191660011790556006549091506001600160a01b036101009091041663a9059cbb61191e3390565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561196b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198f9190612d0e565b50808360020160008282546119a49190612cc6565b925050819055508084600b0160008282546119bf9190612cc6565b90915550506005820154610100900460ff1615611a125781546004840180546000906119ec908490612cde565b90915550508154600a85018054600090611a07908490612cde565b90915550611a499050565b8154600384018054600090611a28908490612cde565b90915550508154600985018054600090611a43908490612cde565b90915550505b60058201548590879033907f14346b96e636bce3fdf42a5ed73f91c82b085304530c1acdc09e1896fb4ccef9908590610100900460ff16426040805193845291151560208401529082015260600160405180910390a4505050505050565b60008381526002602090815260408083206001600160a01b038616845290915281208054611af3919084908110611ae057611ae0612c7b565b906000526020600020906006020161256f565b949350505050565b60015460609060009067ffffffffffffffff811115611b1c57611b1c612d48565b604051908082528060200260200182016040528015611b8157816020015b611b6e6040518060a00160405280600081526020016000815260200160008152602001600015158152602001600081525090565b815260200190600190039081611b3a5790505b50905060005b600154811015611bcb57611b9b81856120a8565b828281518110611bad57611bad612c7b565b60200260200101819052508080611bc390612d5e565b915050611b87565b5092915050565b6000611bdd8161214c565b50600555565b60008281526002602090815260408083206001600160a01b03851684529091528120546060918167ffffffffffffffff811115611c2257611c22612d48565b604051908082528060200260200182016040528015611c5b57816020015b611c4861280d565b815260200190600190039081611c405790505b50905060005b82811015611dbe5760008681526002602090815260408083206001600160a01b03891684529091529020805482908110611c9d57611c9d612c7b565b60009182526020918290206040805160e081018252600690930290910180548352600181015493830193909352600283015490820152600382015460608201526004820154608082015260059091015460ff808216151560a084015261010090910416151560c08201528251839083908110611d1b57611d1b612c7b565b602002602001015160000181905250818181518110611d3c57611d3c612c7b565b60200260200101516000015160a00151611dac5760008681526002602090815260408083206001600160a01b038916845290915290208054611d89919083908110611ae057611ae0612c7b565b828281518110611d9b57611d9b612c7b565b602002602001015160200181815250505b80611db681612d5e565b915050611c61565b50949350505050565b60018181548110611dd757600080fd5b60009182526020909120600c9091020180546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b909b015460ff909a169b50979996989597949693959294919390928c565b6000611e468161214c565b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000611e9d8161214c565b506006805460ff1916911515919091179055565b6000805b600154811015611ee957611ec98184611f77565b15611ed75750600192915050565b80611ee181612d5e565b915050611eb5565b50600092915050565b600060035460018481548110611f0a57611f0a612c7b565b90600052602060002090600c02016004015483611f279190612ca7565b611f319190612d79565b9392505050565b6000611f438161214c565b50600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000611f718161214c565b50600355565b60009182526002602090815260408084206001600160a01b03939093168452919052902060010154421090565b6000611faf8161214c565b8160018481548110611fc357611fc3612c7b565b90600052602060002090600c020160030181905550505050565b6000611fe88161214c565b8160018481548110611ffc57611ffc612c7b565b90600052602060002090600c020160020181905550505050565b60006120218161214c565b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60008281526020819052604090206001015461205f8161214c565b6115ea838361250a565b60006120748161214c565b50600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006120a28161214c565b50600455565b6120dc6040518060a00160405280600081526020016000815260200160008152602001600015158152602001600081525090565b60008381526002602081815260408084206001600160a01b03871685528252808420815160a0810183529381015484526003810154928401929092526004820154908301529190606081016121318787611f77565b15158152600190930154602090930192909252509392505050565b612156813361260d565b50565b6008546040805163070d451f60e01b815290516000926001600160a01b03169163070d451f9160048083019260209291908290030181865afa1580156121a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c79190612cf5565b90508360015b82811161247d57600854604051631b0a264d60e11b81526001600160a01b03848116600483015260009216906336144c9a90602401602060405180830381865afa15801561221f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122439190612d2b565b90506001600160a01b03811615612464576008546040516303fea6cb60e11b81526001600160a01b0383811660048301526024820185905260009216906307fd4d9690604401602060405180830381865afa1580156122a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ca9190612d0e565b15612380576008546040516384197dbb60e01b815260048101899052602481018590526001600160a01b03909116906384197dbb90604401602060405180830381865afa15801561231f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123439190612cf5565b60008a81526002602090815260408083206001600160a01b03871684529091529020600301549091508082111561237a578061237c565b815b9150505b6008546040805160c0810182526001600160a01b038581168252602082018590528b81168284015260608201879052608082018a905260a082018d90529151631641d3a360e21b815291909216916359074e8c91612429919060040181516001600160a01b0390811682526020808401519083015260408084015190911690820152606080830151908201526080808301519082015260a0918201519181019190915260c00190565b600060405180830381600087803b15801561244357600080fd5b505af1158015612457573d6000803e3d6000fd5b505050508193505061246a565b5061247d565b508061247581612d5e565b9150506121cd565b50505050505050565b6124908282611e69565b6116a2576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556124c63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6125148282611e69565b156116a2576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008160010154600014806125885750600582015460ff165b1561259557506000919050565b6005820154600090610100900460ff166125bf57600483015483546125ba9190612cc6565b6125c5565b82600401545b9050428360020154116125d85792915050565b826001015483600201546125ec9190612cde565b8184600101546125f94290565b6126039190612cde565b611f279190612ca7565b6126178282611e69565b6116a25761262f816001600160a01b03166014612671565b61263a836020612671565b60405160200161264b929190612dcb565b60408051601f198184030181529082905262461bcd60e51b825261074491600401612e40565b60606000612680836002612ca7565b61268b906002612cc6565b67ffffffffffffffff8111156126a3576126a3612d48565b6040519080825280601f01601f1916602001820160405280156126cd576020820181803683370190505b509050600360fc1b816000815181106126e8576126e8612c7b565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061271757612717612c7b565b60200101906001600160f81b031916908160001a905350600061273b846002612ca7565b612746906001612cc6565b90505b60018111156127be576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061277a5761277a612c7b565b1a60f81b82828151811061279057612790612c7b565b60200101906001600160f81b031916908160001a90535060049490941c936127b781612e73565b9050612749565b508315611f315760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610744565b604051806040016040528061285c6040518060e0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b8152602001600081525090565b60006020828403121561287b57600080fd5b81356001600160e01b031981168114611f3157600080fd5b6001600160a01b038116811461215657600080fd5b6000602082840312156128ba57600080fd5b8135611f3181612893565b6000602082840312156128d757600080fd5b5035919050565b600080604083850312156128f157600080fd5b82359150602083013561290381612893565b809150509250929050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a0810151151560a083015260c0810151151560c08301525050565b6020808252825182820181905260009190848201906040850190845b818110156129985761298583855161290e565b9284019260e09290920191600101612972565b50909695505050505050565b600080600080608085870312156129ba57600080fd5b5050823594602084013594506040840135936060013592509050565b801515811461215657600080fd5b600080604083850312156129f757600080fd5b823591506020830135612903816129d6565b60008060008060808587031215612a1f57600080fd5b84359350602085013592506040850135612a38816129d6565b91506060850135612a4881612893565b939692955090935050565b60008060408385031215612a6657600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015612b2357815180511515855280870151858801528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e0808201519086015261010080820151908601526101208082015190860152610140808201519086015261016090810151908501526101809093019290850190600101612a92565b5091979650505050505050565b600080600060608486031215612b4557600080fd5b833592506020840135612b5781612893565b929592945050506040919091013590565b6020808252825182820181905260009190848201906040850190845b8181101561299857612bc4838551805182526020810151602083015260408101516040830152606081015115156060830152608081015160808301525050565b9284019260a09290920191600101612b84565b6020808252825182820181905260009190848201906040850190845b81811015612998578351612c0884825161290e565b85015160e08401529284019261010090920191600101612bf3565b600060208284031215612c3557600080fd5b8135611f31816129d6565b60a081016106958284805182526020810151602083015260408101516040830152606081015115156060830152608081015160808301525050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612cc157612cc1612c91565b500290565b60008219821115612cd957612cd9612c91565b500190565b600082821015612cf057612cf0612c91565b500390565b600060208284031215612d0757600080fd5b5051919050565b600060208284031215612d2057600080fd5b8151611f31816129d6565b600060208284031215612d3d57600080fd5b8151611f3181612893565b634e487b7160e01b600052604160045260246000fd5b6000600019821415612d7257612d72612c91565b5060010190565b600082612d9657634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015612db6578181015183820152602001612d9e565b83811115612dc5576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612e03816017850160208801612d9b565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612e34816028840160208801612d9b565b01602801949350505050565b6020815260008251806020840152612e5f816040850160208701612d9b565b601f01601f19169190910160400192915050565b600081612e8257612e82612c91565b50600019019056fea26469706673582212204d001d772a18f937c12fa09d2734ae424f45816b1488900baef832df5c807bc064736f6c634300080b0033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token1_: PromiseOrValue<string>,
    token2_: PromiseOrValue<string>,
    rewardPool_: PromiseOrValue<string>,
    referralManager_: PromiseOrValue<string>,
    squadsManager_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      token1_,
      token2_,
      rewardPool_,
      referralManager_,
      squadsManager_,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    token1_: PromiseOrValue<string>,
    token2_: PromiseOrValue<string>,
    rewardPool_: PromiseOrValue<string>,
    referralManager_: PromiseOrValue<string>,
    squadsManager_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token1_,
      token2_,
      rewardPool_,
      referralManager_,
      squadsManager_,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
