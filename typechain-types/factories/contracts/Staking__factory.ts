/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token1_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token2_",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardPool_",
        type: "address",
      },
      {
        internalType: "address",
        name: "referralManager_",
        type: "address",
      },
      {
        internalType: "address",
        name: "squadsManager_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "stakingPlanId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "ActivityChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakingPlanId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isToken2",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakingPlanId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isToken2",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "stakingPlanId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
    ],
    name: "StakingPlanCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakingPlanId",
        type: "uint256",
      },
    ],
    name: "Subscribed",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_POINTS_DIVIDER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_STAKE_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIME_STEP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
    ],
    name: "addStakingPlan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "calculateStakeProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isToken2",
        type: "bool",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "getAvailableStakeReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingPlans",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stakingPlanId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "subscriptionCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "subscriptionDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "apr",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakesToken1No",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakesToken2No",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakedToken1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakedToken2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken1Locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken2Locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClaimed",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.StakingPlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserPlanInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken1Staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken2Staked",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSubscribed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "subscribedTill",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.UserStakingInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserPlansInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken1Staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken2Staked",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSubscribed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "subscribedTill",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.UserStakingInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserStakes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "apr",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isToken2",
            type: "bool",
          },
        ],
        internalType: "struct IStaking.Stake[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserStakesWithRewards",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeStart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeEnd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "apr",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "profit",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isClaimed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isToken2",
                type: "bool",
              },
            ],
            internalType: "struct IStaking.Stake",
            name: "stake",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.StakeWithRewardsInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasAnySubscription",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasSubscription",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralManager",
    outputs: [
      {
        internalType: "contract IReferralManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldAddReferrerOnToken2Stake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "squadsManager",
    outputs: [
      {
        internalType: "contract ISquads",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakingPlans",
    outputs: [
      {
        internalType: "uint256",
        name: "stakingPlanId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "subscriptionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakesToken1No",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakesToken2No",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakedToken1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakedToken2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentToken1Locked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentToken2Locked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalClaimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract ERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token2",
    outputs: [
      {
        internalType: "contract ERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minLimit_",
        type: "uint256",
      },
    ],
    name: "updateMinStakeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
    ],
    name: "updatePlanAPR",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "updatePlanActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "updatePlanDurationDays",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    name: "updatePlanSubscriptionCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionDuration",
        type: "uint256",
      },
    ],
    name: "updatePlanSubscriptionPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referralManager_",
        type: "address",
      },
    ],
    name: "updateReferralManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress_",
        type: "address",
      },
    ],
    name: "updateRewardPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "updateShouldAddReferrerOnToken2Stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "squadsManager_",
        type: "address",
      },
    ],
    name: "updateSquadsManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "step_",
        type: "uint256",
      },
    ],
    name: "updateTimeStep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token1_",
        type: "address",
      },
    ],
    name: "updateToken1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token2_",
        type: "address",
      },
    ],
    name: "updateToken2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526103e86003556201518060045567016345785d8a00006005553480156200002a57600080fd5b506040516200326a3803806200326a8339810160408190526200004d91620001d8565b6001600160a01b0385166200006157600080fd5b6001600160a01b0384166200007557600080fd5b6001600160a01b0383166200008957600080fd5b6001600160a01b0382166200009d57600080fd5b620000aa6000336200011a565b600a80546001600160a01b03199081166001600160a01b039586161790915560068054610100600160a81b03191661010097861697909702969096179095556007805486169484169490941790935560088054851691831691909117905560098054909316911617905562000248565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620001b7576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001763390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b80516001600160a01b0381168114620001d357600080fd5b919050565b600080600080600060a08688031215620001f157600080fd5b620001fc86620001bb565b94506200020c60208701620001bb565b93506200021c60408701620001bb565b92506200022c60608701620001bb565b91506200023c60808701620001bb565b90509295509295909350565b61301280620002586000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80637c67b33911610151578063c71207af116100c3578063d5fbac3a11610087578063d5fbac3a146105fc578063dce4b29b1461060f578063e256617314610622578063eadb182c1461062b578063ed10dda314610634578063fcd0cad71461064757600080fd5b8063c71207af14610598578063c7852153146105ab578063cd69d3d9146105be578063d21220a7146105d1578063d547741f146105e957600080fd5b8063ad6299bc11610115578063ad6299bc1461052c578063ae1f267c1461053f578063ae1fc32414610552578063afa8308514610565578063b652b28c14610572578063bac1d2b51461058557600080fd5b80637c67b339146104d857806391d14854146104eb57806395319e23146104fe578063958e2d3114610511578063a217fddf1461052457600080fd5b80632f2ff15d116101ea578063441a3e70116101ae578063441a3e70146103ea578063458f3bb0146103fd578063472b0b6814610410578063717f9007146104305780637213fe4714610443578063762e7a341461046357600080fd5b80632f2ff15d1461039357806332bc298c146103a657806336568abe146103af5780633bb2c773146103c25780633fe90537146103d757600080fd5b8063188ec3561161023c578063188ec356146102fc5780631c0e06121461030c578063248a9ca31461031f57806325be124e146103425780632968f6161461036d5780632ccd96231461038057600080fd5b806301ffc9a714610279578063064e6780146102a15780630f574ba7146102b657806314ce783d146102c957806316c51a37146102e9575b600080fd5b61028c6102873660046129b0565b610667565b60405190151581526020015b60405180910390f35b6102b46102af3660046129ef565b61069e565b005b6102b46102c4366004612a0c565b6106d2565b6102dc6102d7366004612a25565b610888565b6040516102989190612a9d565b6102b46102f7366004612aeb565b610950565b425b604051908152602001610298565b6102b461031a366004612b2b565b610cae565b6102fe61032d366004612a0c565b60009081526020819052604090206001015490565b600754610355906001600160a01b031681565b6040516001600160a01b039091168152602001610298565b6102b461037b366004612b50565b610d36565b600854610355906001600160a01b031681565b6102b46103a1366004612a25565b6115f9565b6102fe60045481565b6102b46103bd366004612a25565b611623565b6103ca6116a1565b6040516102989190612b9a565b6102b46103e5366004612c60565b611787565b6102b46103f8366004612c60565b6117c0565b6102fe61040b366004612c82565b611aad565b61042361041e3660046129ef565b611b01565b6040516102989190612cba565b6102b461043e366004612a0c565b611bd8565b610456610451366004612a25565b611be9565b6040516102989190612d29565b610476610471366004612a0c565b611dcd565b604080519d8e529b151560208e01529a8c019990995260608b019790975260808a019590955260a089019390935260c088019190915260e08701526101008601526101208501526101408401526101608301526101808201526101a001610298565b6102b46104e63660046129ef565b611e50565b61028c6104f9366004612a25565b611e7e565b6102b461050c366004612d75565b611ea7565b6102b461051f366004612a0c565b611ec6565b6102fe600081565b61028c61053a3660046129ef565b611f64565b6102fe61054d366004612c60565b611fa5565b6102b46105603660046129ef565b612027565b60065461028c9060ff1681565b61028c610580366004612a25565b612055565b6102b4610593366004612c60565b612082565b6102b46105a6366004612c60565b6120bb565b6102b46105b9366004612c60565b6120f4565b6102b46105cc3660046129ef565b61212d565b6006546103559061010090046001600160a01b031681565b6102b46105f7366004612a25565b61215b565b6102b461060a3660046129ef565b612180565b6102b461061d366004612a0c565b6121ae565b6102fe60055481565b6102fe60035481565b600954610355906001600160a01b031681565b61065a610655366004612a25565b6121bf565b6040516102989190612d92565b60006001600160e01b03198216637965db0b60e01b148061069857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006106a981612263565b50600680546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6000600182815481106106e7576106e7612dcd565b60009182526020909120600d90910201600181015490915060ff166107535760405162461bcd60e51b815260206004820152601a60248201527f5374616b696e6720706c616e206973206e6f742061637469766500000000000060448201526064015b60405180910390fd5b60065461010090046001600160a01b03166379cc67903360028401546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156107b557600080fd5b505af11580156107c9573d6000803e3d6000fd5b5050505060006107d64290565b60008481526002602090815260408083203384529091529020600101541061081a57600083815260026020908152604080832033845290915290206001015461081c565b425b905060045482600301546108309190612df9565b61083a9082612e18565b60008481526002602090815260408083203380855292528083206001019390935591518592917f4b90d6788928d63c1821907a6a8b95f40d26562d8fe41b105f7489db9966dfcb91a3505050565b60008281526002602090815260408083206001600160a01b03851684528252808320805482518185028101850190935280835260609492939192909184015b828210156109445760008481526020908190206040805160e08101825260068602909201805483526001808201548486015260028201549284019290925260038101546060840152600481015460808401526005015460ff808216151560a085015261010090910416151560c083015290835290920191016108c7565b50505050905092915050565b600061095b81612263565b600083116109a35760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a10323ab930ba34b7b760591b604482015260640161074a565b600082116109e65760405162461bcd60e51b815260206004820152601060248201526f24b739bab33334b1b4b2b73a1020a82960811b604482015260640161074a565b604080516101a0810182526001805480835260208301828152938301898152606084018981526080850189815260a08601898152600060c0880181815260e089018281526101008a018381526101208b018481526101408c018581526101608d018681526101808e018781528c8e018e55968d90528d517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600d909d029c8d01559d517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78c01805460ff191691151591909117905598517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88b015596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf98a015594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa89015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb880155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfc87015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfd86015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfe85015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cff84015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0d0083015593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0d0182015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0d029093019290925581549091610c6d91612e30565b60408051868152602081018690527fb25951144c8a6e80eb675cb14ec779e73bd8f06dc10471b7074332d38cbf9af5910160405180910390a2505050505050565b6000610cb981612263565b8160018481548110610ccd57610ccd612dcd565b90600052602060002090600d020160010160006101000a81548160ff021916908315150217905550827fbfb8d33fd9f7cfe605f8368d0791b6bc475b77345c7c022bbe2aecf8c21ba24383604051610d29911515815260200190565b60405180910390a2505050565b60018481548110610d4957610d49612dcd565b600091825260209091206001600d90920201015460ff16610dac5760405162461bcd60e51b815260206004820152601a60248201527f5374616b696e6720706c616e206973206e6f7420616374697665000000000000604482015260640161074a565b610db68433612055565b610dfb5760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba1039bab139b1b934b132b960511b604482015260640161074a565b600554831015610e595760405162461bcd60e51b8152602060048201526024808201527f5374616b6520616d6f756e74206c657373207468616e206d696e696d756d2076604482015263616c756560e01b606482015260840161074a565b6001600160a01b038116331415610eb25760405162461bcd60e51b815260206004820152601a60248201527f52656665727265722063616e206e6f742062652073656e646572000000000000604482015260640161074a565b6000610ebe8585611fa5565b600654600a546040516370a0823160e01b81526001600160a01b03918216600482015292935061010090910416906370a0823190602401602060405180830381865afa158015610f12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f369190612e47565b811115610f855760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f75676820746f6b656e7320666f722072657761726400000000604482015260640161074a565b8215611002576007546001600160a01b03166379cc6790336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101879052604401600060405180830381600087803b158015610fe557600080fd5b505af1158015610ff9573d6000803e3d6000fd5b50505050611092565b60065461010090046001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018790526064016020604051808303816000875af115801561106c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110909190612e60565b505b600654600a546040516323b872dd60e01b81526001600160a01b0391821660048201523060248201526044810184905261010090920416906323b872dd906064016020604051808303816000875af11580156110f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111169190612e60565b5060006001868154811061112c5761112c612dcd565b60009182526020808320898452600290915260408320600d909202019250816111523390565b6001600160a01b03166001600160a01b03168152602001908152602001600020905060006040518060e0016040528088815260200161118e4290565b815260200160045485600401546111a59190612df9565b6111af9042612e18565b81526005808601546020808401919091526040808401899052600060608086018290528c158015608097880152895460018181018c558b8552938690208951600690920201908155948801519285019290925591860151600284015590850151600383015592840151600482015560a08401519101805460c085015115156101000261ff00199315159390931661ffff19909116179190911790559091506112c257868260040160008282546112659190612e18565b92505081905550868360090160008282546112809190612e18565b925050819055508683600b01600082825461129b9190612e18565b9250508190555060018360070160008282546112b79190612e18565b9091555061132e9050565b868260030160008282546112d69190612e18565b92505081905550868360080160008282546112f19190612e18565b925050819055508683600a01600082825461130c9190612e18565b9250508190555060018360060160008282546113289190612e18565b90915550505b85158061133d575060065460ff165b1561158b576008546000906001600160a01b03166336144c9a336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561139b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bf9190612e7d565b90506001600160a01b0381161580156113e057506001600160a01b03861615155b156114d7576008546001600160a01b031663f8d0e6ec336040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529089166024820152604401600060405180830381600087803b15801561144057600080fd5b505af1158015611454573d6000803e3d6000fd5b50506008546001600160a01b031691506336144c9a9050336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156114b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d49190612e7d565b90505b6114e38933878b612270565b6009546001600160a01b031615611589576009546001600160a01b031663afea5d558a83336040516001600160e01b031960e086901b16815260048101939093526001600160a01b039182166024840152166044820152606481018b90526084016020604051808303816000875af1158015611563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115879190612e60565b505b505b815461159990600190612e30565b815160808084015160c0850151604080519485526020850192909252151583820152426060840152518b9233927f42ca3e556bfff174f2df01f4d630ae56cd8a109430c8058a83541d2f8949f64f92918290030190a45050505050505050565b60008281526020819052604090206001015461161481612263565b61161e83836125d7565b505050565b6001600160a01b03811633146116935760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161074a565b61169d828261265b565b5050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561177e576000848152602090819020604080516101a081018252600d86029092018054835260018082015460ff161515848601526002820154928401929092526003810154606084015260048101546080840152600581015460a0840152600681015460c0840152600781015460e084015260088101546101008401526009810154610120840152600a810154610140840152600b810154610160840152600c015461018083015290835290920191016116c5565b50505050905090565b600061179281612263565b81600184815481106117a6576117a6612dcd565b90600052602060002090600d020160020181905550505050565b6000600183815481106117d5576117d5612dcd565b60009182526020808320868452600290915260408320600d909202019250816117fb3390565b6001600160a01b03166001600160a01b031681526020019081526020016000209050600081600001848154811061183457611834612dcd565b60009182526020909120600690910201600581015490915060ff161561189c5760405162461bcd60e51b815260206004820152601860248201527f5374616b6520697320616c726561647920636c61696d65640000000000000000604482015260640161074a565b42816002015411156118e95760405162461bcd60e51b815260206004820152601660248201527514dd185ad9481a5cc81b9bdd081c9958591e481e595d60521b604482015260640161074a565b60006118f4826126c0565b60058301805460ff191660011790556006549091506001600160a01b036101009091041663a9059cbb6119243390565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119959190612e60565b50808360020160008282546119aa9190612e18565b925050819055508084600c0160008282546119c59190612e18565b90915550506005820154610100900460ff1615611a185781546004840180546000906119f2908490612e30565b90915550508154600b85018054600090611a0d908490612e30565b90915550611a4f9050565b8154600384018054600090611a2e908490612e30565b90915550508154600a85018054600090611a49908490612e30565b90915550505b60058201548590879033907f14346b96e636bce3fdf42a5ed73f91c82b085304530c1acdc09e1896fb4ccef9908590610100900460ff16426040805193845291151560208401529082015260600160405180910390a4505050505050565b60008381526002602090815260408083206001600160a01b038616845290915281208054611af9919084908110611ae657611ae6612dcd565b90600052602060002090600602016126c0565b949350505050565b60015460609060009067ffffffffffffffff811115611b2257611b22612e9a565b604051908082528060200260200182016040528015611b8757816020015b611b746040518060a00160405280600081526020016000815260200160008152602001600015158152602001600081525090565b815260200190600190039081611b405790505b50905060005b600154811015611bd157611ba181856121bf565b828281518110611bb357611bb3612dcd565b60200260200101819052508080611bc990612eb0565b915050611b8d565b5092915050565b6000611be381612263565b50600555565b60008281526002602090815260408083206001600160a01b03851684529091528120546060918167ffffffffffffffff811115611c2857611c28612e9a565b604051908082528060200260200182016040528015611c6157816020015b611c4e612954565b815260200190600190039081611c465790505b50905060005b82811015611dc45760008681526002602090815260408083206001600160a01b03891684529091529020805482908110611ca357611ca3612dcd565b60009182526020918290206040805160e081018252600690930290910180548352600181015493830193909352600283015490820152600382015460608201526004820154608082015260059091015460ff808216151560a084015261010090910416151560c08201528251839083908110611d2157611d21612dcd565b602002602001015160000181905250818181518110611d4257611d42612dcd565b60200260200101516000015160a00151611db25760008681526002602090815260408083206001600160a01b038916845290915290208054611d8f919083908110611ae657611ae6612dcd565b828281518110611da157611da1612dcd565b602002602001015160200181815250505b80611dbc81612eb0565b915050611c67565b50949350505050565b60018181548110611ddd57600080fd5b90600052602060002090600d02016000915090508060000154908060010160009054906101000a900460ff169080600201549080600301549080600401549080600501549080600601549080600701549080600801549080600901549080600a01549080600b01549080600c015490508d565b6000611e5b81612263565b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000611eb281612263565b506006805460ff1916911515919091179055565b60008181526002602090815260408083203384529091528120905b815481101561161e57818181548110611efc57611efc612dcd565b600091825260209091206005600690920201015460ff16158015611f43575042828281548110611f2e57611f2e612dcd565b90600052602060002090600602016002015411155b15611f5257611f5283826117c0565b80611f5c81612eb0565b915050611ee1565b6000805b600154811015611f9c57611f7c8184612055565b15611f8a5750600192915050565b80611f9481612eb0565b915050611f68565b50600092915050565b600060035460018481548110611fbd57611fbd612dcd565b90600052602060002090600d02016004015461016d60018681548110611fe557611fe5612dcd565b90600052602060002090600d020160050154856120029190612df9565b61200c9190612ecb565b6120169190612df9565b6120209190612ecb565b9392505050565b600061203281612263565b50600780546001600160a01b0319166001600160a01b0392909216919091179055565b60009182526002602090815260408084206001600160a01b03939093168452919052902060010154421090565b600061208d81612263565b81600184815481106120a1576120a1612dcd565b90600052602060002090600d020160040181905550505050565b60006120c681612263565b81600184815481106120da576120da612dcd565b90600052602060002090600d020160050181905550505050565b60006120ff81612263565b816001848154811061211357612113612dcd565b90600052602060002090600d020160030181905550505050565b600061213881612263565b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60008281526020819052604090206001015461217681612263565b61161e838361265b565b600061218b81612263565b50600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006121b981612263565b50600455565b6121f36040518060a00160405280600081526020016000815260200160008152602001600015158152602001600081525090565b60008381526002602081815260408084206001600160a01b03871685528252808420815160a0810183529381015484526003810154928401929092526004820154908301529190606081016122488787612055565b15158152600190930154602090930192909252509392505050565b61226d8133612754565b50565b6008546040805163070d451f60e01b815290516000926001600160a01b03169163070d451f9160048083019260209291908290030181865afa1580156122ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122de9190612e47565b90508360015b8281116125ce57600854604051631b0a264d60e11b81526001600160a01b03848116600483015260009216906336144c9a90602401602060405180830381865afa158015612336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061235a9190612e7d565b90506001600160a01b038116156125b5576008546040516303fea6cb60e11b81526001600160a01b038381166004830152602482018590526000926001929116906307fd4d9690604401602060405180830381865afa1580156123c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e59190612e60565b156124bf576008546040516384197dbb60e01b8152600481018a9052602481018690526001600160a01b03909116906384197dbb90604401602060405180830381865afa15801561243a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245e9190612e47565b60008b81526002602090815260408083206001600160a01b03881684529091529020600301549092508061249557600291506124ab565b808311156124a657600391506124ab565b600091505b808311156124b957806124bb565b825b9250505b6008546040805160e0810182526001600160a01b038681168252602082018690528c81168284015260608201889052608082018b905260a082018e905260c082018590529151639581f52760e01b81529190921691639581f52791612579919060040181516001600160a01b0390811682526020808401519083015260408084015190911690820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b600060405180830381600087803b15801561259357600080fd5b505af11580156125a7573d6000803e3d6000fd5b5050505082945050506125bb565b506125ce565b50806125c681612eb0565b9150506122e4565b50505050505050565b6125e18282611e7e565b61169d576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556126173390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6126658282611e7e565b1561169d576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008160010154600014806126d95750600582015460ff165b156126e657506000919050565b6005820154600090610100900460ff16612710576004830154835461270b9190612e18565b612716565b82600401545b9050428360020154116127295792915050565b8260010154836002015461273d9190612e30565b81846001015461274a4290565b61200c9190612e30565b61275e8282611e7e565b61169d57612776816001600160a01b031660146127b8565b6127818360206127b8565b604051602001612792929190612f1d565b60408051601f198184030181529082905262461bcd60e51b825261074a91600401612f92565b606060006127c7836002612df9565b6127d2906002612e18565b67ffffffffffffffff8111156127ea576127ea612e9a565b6040519080825280601f01601f191660200182016040528015612814576020820181803683370190505b509050600360fc1b8160008151811061282f5761282f612dcd565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061285e5761285e612dcd565b60200101906001600160f81b031916908160001a9053506000612882846002612df9565b61288d906001612e18565b90505b6001811115612905576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106128c1576128c1612dcd565b1a60f81b8282815181106128d7576128d7612dcd565b60200101906001600160f81b031916908160001a90535060049490941c936128fe81612fc5565b9050612890565b5083156120205760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161074a565b60405180604001604052806129a36040518060e0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b8152602001600081525090565b6000602082840312156129c257600080fd5b81356001600160e01b03198116811461202057600080fd5b6001600160a01b038116811461226d57600080fd5b600060208284031215612a0157600080fd5b8135612020816129da565b600060208284031215612a1e57600080fd5b5035919050565b60008060408385031215612a3857600080fd5b823591506020830135612a4a816129da565b809150509250929050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a0810151151560a083015260c0810151151560c08301525050565b6020808252825182820181905260009190848201906040850190845b81811015612adf57612acc838551612a55565b9284019260e09290920191600101612ab9565b50909695505050505050565b60008060008060808587031215612b0157600080fd5b5050823594602084013594506040840135936060013592509050565b801515811461226d57600080fd5b60008060408385031215612b3e57600080fd5b823591506020830135612a4a81612b1d565b60008060008060808587031215612b6657600080fd5b84359350602085013592506040850135612b7f81612b1d565b91506060850135612b8f816129da565b939692955090935050565b602080825282518282018190526000919060409081850190868401855b82811015612c5357815180518552868101511515878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e08082015190860152610100808201519086015261012080820151908601526101408082015190860152610160808201519086015261018090810151908501526101a09093019290850190600101612bb7565b5091979650505050505050565b60008060408385031215612c7357600080fd5b50508035926020909101359150565b600080600060608486031215612c9757600080fd5b833592506020840135612ca9816129da565b929592945050506040919091013590565b6020808252825182820181905260009190848201906040850190845b81811015612adf57612d16838551805182526020810151602083015260408101516040830152606081015115156060830152608081015160808301525050565b9284019260a09290920191600101612cd6565b6020808252825182820181905260009190848201906040850190845b81811015612adf578351612d5a848251612a55565b85015160e08401529284019261010090920191600101612d45565b600060208284031215612d8757600080fd5b813561202081612b1d565b60a081016106988284805182526020810151602083015260408101516040830152606081015115156060830152608081015160808301525050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612e1357612e13612de3565b500290565b60008219821115612e2b57612e2b612de3565b500190565b600082821015612e4257612e42612de3565b500390565b600060208284031215612e5957600080fd5b5051919050565b600060208284031215612e7257600080fd5b815161202081612b1d565b600060208284031215612e8f57600080fd5b8151612020816129da565b634e487b7160e01b600052604160045260246000fd5b6000600019821415612ec457612ec4612de3565b5060010190565b600082612ee857634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015612f08578181015183820152602001612ef0565b83811115612f17576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612f55816017850160208801612eed565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612f86816028840160208801612eed565b01602801949350505050565b6020815260008251806020840152612fb1816040850160208701612eed565b601f01601f19169190910160400192915050565b600081612fd457612fd4612de3565b50600019019056fea2646970667358221220f9e7d97554887841b68ec6957f3656eb18633b8e8131b0ba514adf5aa548c4a864736f6c634300080b0033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token1_: PromiseOrValue<string>,
    token2_: PromiseOrValue<string>,
    rewardPool_: PromiseOrValue<string>,
    referralManager_: PromiseOrValue<string>,
    squadsManager_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      token1_,
      token2_,
      rewardPool_,
      referralManager_,
      squadsManager_,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    token1_: PromiseOrValue<string>,
    token2_: PromiseOrValue<string>,
    rewardPool_: PromiseOrValue<string>,
    referralManager_: PromiseOrValue<string>,
    squadsManager_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token1_,
      token2_,
      rewardPool_,
      referralManager_,
      squadsManager_,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
