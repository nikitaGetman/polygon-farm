/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token1_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token2_",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardPool_",
        type: "address",
      },
      {
        internalType: "address",
        name: "referralManager_",
        type: "address",
      },
      {
        internalType: "address",
        name: "squadsManager_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "ActivityChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isToken2",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isToken2",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPercent",
        type: "uint256",
      },
    ],
    name: "StakingPlanCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
    ],
    name: "Subscribed",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_STAKE_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTS_DIVIDER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIME_STEP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitPercent",
        type: "uint256",
      },
    ],
    name: "addStakingPlan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "calculateStakeProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isToken2",
        type: "bool",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "getAvailableStakeReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingPlans",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "subscriptionCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "subscriptionDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profitPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakesToken1No",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakesToken2No",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakedToken1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStakedToken2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken1Locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken2Locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClaimed",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.StakingPlan[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserPlanInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken1Staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken2Staked",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSubscribed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "subscribedTill",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.UserStakingInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserPlansInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken1Staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentToken2Staked",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSubscribed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "subscribedTill",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.UserStakingInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserStakes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profitPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isToken2",
            type: "bool",
          },
        ],
        internalType: "struct IStaking.Stake[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserStakesWithRewards",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeStart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeEnd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "profitPercent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "profit",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isClaimed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isToken2",
                type: "bool",
              },
            ],
            internalType: "struct IStaking.Stake",
            name: "stake",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
        ],
        internalType: "struct IStaking.StakeWithRewardsInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasAnySubscription",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasSubscription",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralManager",
    outputs: [
      {
        internalType: "contract IReferralManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldAddReferrerOnToken2Stake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "squadsManager",
    outputs: [
      {
        internalType: "contract ISquads",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakingPlans",
    outputs: [
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "subscriptionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitPercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakesToken1No",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakesToken2No",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakedToken1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakedToken2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentToken1Locked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentToken2Locked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalClaimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract ERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token2",
    outputs: [
      {
        internalType: "contract ERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minLimit_",
        type: "uint256",
      },
    ],
    name: "updateMinStakeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "divider_",
        type: "uint256",
      },
    ],
    name: "updatePercentDivider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "updatePlanActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "updatePlanDurationDays",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "updatePlanReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    name: "updatePlanSubscriptionCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionDuration",
        type: "uint256",
      },
    ],
    name: "updatePlanSubscriptionPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referralManager_",
        type: "address",
      },
    ],
    name: "updateReferralManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress_",
        type: "address",
      },
    ],
    name: "updateRewardPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "updateShouldAddReferrerOnToken2Stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "squadsManager_",
        type: "address",
      },
    ],
    name: "updateSquadsManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "step_",
        type: "uint256",
      },
    ],
    name: "updateTimeStep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token1_",
        type: "address",
      },
    ],
    name: "updateToken1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token2_",
        type: "address",
      },
    ],
    name: "updateToken2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526103e86003556201518060045567016345785d8a00006005553480156200002a57600080fd5b506040516200320e3803806200320e8339810160408190526200004d91620001d8565b6001600160a01b0385166200006157600080fd5b6001600160a01b0384166200007557600080fd5b6001600160a01b0383166200008957600080fd5b6001600160a01b0382166200009d57600080fd5b620000aa6000336200011a565b600a80546001600160a01b03199081166001600160a01b039586161790915560068054610100600160a81b03191661010097861697909702969096179095556007805486169484169490941790935560088054851691831691909117905560098054909316911617905562000248565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620001b7576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001763390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b80516001600160a01b0381168114620001d357600080fd5b919050565b600080600080600060a08688031215620001f157600080fd5b620001fc86620001bb565b94506200020c60208701620001bb565b93506200021c60408701620001bb565b92506200022c60608701620001bb565b91506200023c60808701620001bb565b90509295509295909350565b612fb680620002586000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80637213fe471161015c578063b3ea1e7c116100ce578063d547741f11610087578063d547741f1461060d578063d5fbac3a14610620578063dce4b29b14610633578063e256617314610646578063ed10dda31461064f578063fcd0cad71461066257600080fd5b8063b3ea1e7c14610596578063b652b28c146105a9578063bac1d2b5146105bc578063c7852153146105cf578063cd69d3d9146105e2578063d21220a7146105f557600080fd5b8063958e2d3111610120578063958e2d3114610535578063a217fddf14610548578063ad6299bc14610550578063ae1f267c14610563578063ae1fc32414610576578063afa830851461058957600080fd5b80637213fe471461046e578063762e7a341461048e5780637c67b339146104fc57806391d148541461050f57806395319e231461052257600080fd5b80632ccd9623116101f55780633bb2c773116101b95780633bb2c773146103ed5780633fe9053714610402578063441a3e7014610415578063458f3bb014610428578063472b0b681461043b578063717f90071461045b57600080fd5b80632ccd9623146103985780632f2ff15d146103ab5780632fe00f57146103be57806332bc298c146103d157806336568abe146103da57600080fd5b806316c51a371161024757806316c51a371461030b578063188ec3561461031e5780631c0e061214610324578063248a9ca31461033757806325be124e1461035a5780632968f6161461038557600080fd5b806301c234a81461028457806301ffc9a7146102a0578063064e6780146102c35780630f574ba7146102d857806314ce783d146102eb575b600080fd5b61028d60035481565b6040519081526020015b60405180910390f35b6102b36102ae36600461295f565b610682565b6040519015158152602001610297565b6102d66102d136600461299e565b6106b9565b005b6102d66102e63660046129bb565b6106ed565b6102fe6102f93660046129d4565b6108a0565b6040516102979190612a4c565b6102d6610319366004612a9a565b610968565b4261028d565b6102d6610332366004612ada565b610ca4565b61028d6103453660046129bb565b60009081526020819052604090206001015490565b60075461036d906001600160a01b031681565b6040516001600160a01b039091168152602001610297565b6102d6610393366004612aff565b610d1e565b60085461036d906001600160a01b031681565b6102d66103b93660046129d4565b6115e3565b6102d66103cc366004612b49565b61160d565b61028d60045481565b6102d66103e83660046129d4565b611646565b6103f56116c4565b6040516102979190612b6b565b6102d6610410366004612b49565b61179f565b6102d6610423366004612b49565b6117d8565b61028d610436366004612c26565b611ac5565b61044e61044936600461299e565b611b19565b6040516102979190612c5e565b6102d66104693660046129bb565b611bf0565b61048161047c3660046129d4565b611c01565b6040516102979190612ccd565b6104a161049c3660046129bb565b611de5565b604080519c15158d5260208d019b909b52998b019890985260608a0196909652608089019490945260a088019290925260c087015260e086015261010085015261012084015261014083015261016082015261018001610297565b6102d661050a36600461299e565b611e59565b6102b361051d3660046129d4565b611e87565b6102d6610530366004612d19565b611eb0565b6102d66105433660046129bb565b611ecf565b61028d600081565b6102b361055e36600461299e565b611f6d565b61028d610571366004612b49565b611fae565b6102d661058436600461299e565b611ff4565b6006546102b39060ff1681565b6102d66105a43660046129bb565b612022565b6102b36105b73660046129d4565b612033565b6102d66105ca366004612b49565b612060565b6102d66105dd366004612b49565b612099565b6102d66105f036600461299e565b6120d2565b60065461036d9061010090046001600160a01b031681565b6102d661061b3660046129d4565b612100565b6102d661062e36600461299e565b612125565b6102d66106413660046129bb565b612153565b61028d60055481565b60095461036d906001600160a01b031681565b6106756106703660046129d4565b612164565b6040516102979190612d36565b60006001600160e01b03198216637965db0b60e01b14806106b357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006106c481612208565b50600680546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60006001828154811061070257610702612d71565b60009182526020909120600c90910201805490915060ff1661076b5760405162461bcd60e51b815260206004820152601a60248201527f5374616b696e6720706c616e206973206e6f742061637469766500000000000060448201526064015b60405180910390fd5b60065461010090046001600160a01b03166379cc67903360018401546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156107cd57600080fd5b505af11580156107e1573d6000803e3d6000fd5b5050505060006107ee4290565b600084815260026020908152604080832033845290915290206001015410610832576000838152600260209081526040808320338452909152902060010154610834565b425b905060045482600201546108489190612d9d565b6108529082612dbc565b60008481526002602090815260408083203380855292528083206001019390935591518592917f4b90d6788928d63c1821907a6a8b95f40d26562d8fe41b105f7489db9966dfcb91a3505050565b60008281526002602090815260408083206001600160a01b03851684528252808320805482518185028101850190935280835260609492939192909184015b8282101561095c5760008481526020908190206040805160e08101825260068602909201805483526001808201548486015260028201549284019290925260038101546060840152600481015460808401526005015460ff808216151560a085015261010090910416151560c083015290835290920191016108df565b50505050905092915050565b600061097381612208565b600083116109bb5760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a10323ab930ba34b7b760591b6044820152606401610762565b60008211610a0b5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e742070726f6669742070657263656e7400000000006044820152606401610762565b60408051610180810182526001808252602082018881529282018781526060830187815260808401878152600060a0860181815260c0870182815260e0880183815261010089018481526101208a018581526101408b018681526101608c018781528b54808d018d55978c90528c517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600c909902988901805460ff19169115159190911790559c517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf788015598517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf887015596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf986015594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa85015591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb840155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfc830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfd82015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfe82015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cff82015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0d0082015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0d019093019290925581549091610c6391612dd4565b60408051868152602081018690527fb25951144c8a6e80eb675cb14ec779e73bd8f06dc10471b7074332d38cbf9af5910160405180910390a2505050505050565b6000610caf81612208565b8160018481548110610cc357610cc3612d71565b6000918252602091829020600c90910201805460ff191692151592909217909155604051831515815284917fbfb8d33fd9f7cfe605f8368d0791b6bc475b77345c7c022bbe2aecf8c21ba243910160405180910390a2505050565b60018481548110610d3157610d31612d71565b60009182526020909120600c909102015460ff16610d915760405162461bcd60e51b815260206004820152601a60248201527f5374616b696e6720706c616e206973206e6f74206163746976650000000000006044820152606401610762565b610d9b8433612033565b610de05760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba1039bab139b1b934b132b960511b6044820152606401610762565b600554831015610e3e5760405162461bcd60e51b8152602060048201526024808201527f5374616b6520616d6f756e74206c657373207468616e206d696e696d756d2076604482015263616c756560e01b6064820152608401610762565b6001600160a01b038116331415610e975760405162461bcd60e51b815260206004820152601a60248201527f52656665727265722063616e206e6f742062652073656e6465720000000000006044820152606401610762565b6000610ea38585611fae565b600654600a546040516370a0823160e01b81526001600160a01b03918216600482015292935061010090910416906370a0823190602401602060405180830381865afa158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1b9190612deb565b811115610f6a5760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f75676820746f6b656e7320666f7220726577617264000000006044820152606401610762565b8215610fe7576007546001600160a01b03166379cc6790336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101879052604401600060405180830381600087803b158015610fca57600080fd5b505af1158015610fde573d6000803e3d6000fd5b50505050611077565b60065461010090046001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018790526064016020604051808303816000875af1158015611051573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110759190612e04565b505b600654600a546040516323b872dd60e01b81526001600160a01b0391821660048201523060248201526044810184905261010090920416906323b872dd906064016020604051808303816000875af11580156110d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fb9190612e04565b5060006001868154811061111157611111612d71565b60009182526020808320898452600290915260408320600c909202019250816111373390565b6001600160a01b03166001600160a01b03168152602001908152602001600020905060006040518060e001604052808881526020016111734290565b8152602001600454856003015461118a9190612d9d565b6111949042612dbc565b81526004808601546020808401919091526040808401899052600060608086018290528c158015608097880152895460018181018c558b85529386902089516006909202019081559488015192850192909255918601516002840155908501516003830155928401519181019190915560a08301516005909101805460c085015115156101000261ff00199315159390931661ffff19909116179190911790559091506112ac578682600401600082825461124f9190612dbc565b925050819055508683600801600082825461126a9190612dbc565b925050819055508683600a0160008282546112859190612dbc565b9250508190555060018360060160008282546112a19190612dbc565b909155506113189050565b868260030160008282546112c09190612dbc565b92505081905550868360070160008282546112db9190612dbc565b92505081905550868360090160008282546112f69190612dbc565b9250508190555060018360050160008282546113129190612dbc565b90915550505b851580611327575060065460ff165b15611575576008546000906001600160a01b03166336144c9a336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611385573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a99190612e21565b90506001600160a01b0381161580156113ca57506001600160a01b03861615155b156114c1576008546001600160a01b031663f8d0e6ec336040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529089166024820152604401600060405180830381600087803b15801561142a57600080fd5b505af115801561143e573d6000803e3d6000fd5b50506008546001600160a01b031691506336144c9a9050336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561149a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114be9190612e21565b90505b6114cd8933878b612215565b6009546001600160a01b031615611573576009546001600160a01b031663afea5d558a83336040516001600160e01b031960e086901b16815260048101939093526001600160a01b039182166024840152166044820152606481018b90526084016020604051808303816000875af115801561154d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115719190612e04565b505b505b815461158390600190612dd4565b815160808084015160c0850151604080519485526020850192909252151583820152426060840152518b9233927f42ca3e556bfff174f2df01f4d630ae56cd8a109430c8058a83541d2f8949f64f92918290030190a45050505050505050565b6000828152602081905260409020600101546115fe81612208565b611608838361257c565b505050565b600061161881612208565b816001848154811061162c5761162c612d71565b90600052602060002090600c020160040181905550505050565b6001600160a01b03811633146116b65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610762565b6116c08282612600565b5050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156117965760008481526020908190206040805161018081018252600c8602909201805460ff1615158352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460a0840152600681015460c0840152600781015460e084015260088101546101008401526009810154610120840152600a810154610140840152600b015461016083015290835290920191016116e8565b50505050905090565b60006117aa81612208565b81600184815481106117be576117be612d71565b90600052602060002090600c020160010181905550505050565b6000600183815481106117ed576117ed612d71565b60009182526020808320868452600290915260408320600c909202019250816118133390565b6001600160a01b03166001600160a01b031681526020019081526020016000209050600081600001848154811061184c5761184c612d71565b60009182526020909120600690910201600581015490915060ff16156118b45760405162461bcd60e51b815260206004820152601860248201527f5374616b6520697320616c726561647920636c61696d656400000000000000006044820152606401610762565b42816002015411156119015760405162461bcd60e51b815260206004820152601660248201527514dd185ad9481a5cc81b9bdd081c9958591e481e595d60521b6044820152606401610762565b600061190c82612665565b60058301805460ff191660011790556006549091506001600160a01b036101009091041663a9059cbb61193c3390565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ad9190612e04565b50808360020160008282546119c29190612dbc565b925050819055508084600b0160008282546119dd9190612dbc565b90915550506005820154610100900460ff1615611a30578154600484018054600090611a0a908490612dd4565b90915550508154600a85018054600090611a25908490612dd4565b90915550611a679050565b8154600384018054600090611a46908490612dd4565b90915550508154600985018054600090611a61908490612dd4565b90915550505b60058201548590879033907f14346b96e636bce3fdf42a5ed73f91c82b085304530c1acdc09e1896fb4ccef9908590610100900460ff16426040805193845291151560208401529082015260600160405180910390a4505050505050565b60008381526002602090815260408083206001600160a01b038616845290915281208054611b11919084908110611afe57611afe612d71565b9060005260206000209060060201612665565b949350505050565b60015460609060009067ffffffffffffffff811115611b3a57611b3a612e3e565b604051908082528060200260200182016040528015611b9f57816020015b611b8c6040518060a00160405280600081526020016000815260200160008152602001600015158152602001600081525090565b815260200190600190039081611b585790505b50905060005b600154811015611be957611bb98185612164565b828281518110611bcb57611bcb612d71565b60200260200101819052508080611be190612e54565b915050611ba5565b5092915050565b6000611bfb81612208565b50600555565b60008281526002602090815260408083206001600160a01b03851684529091528120546060918167ffffffffffffffff811115611c4057611c40612e3e565b604051908082528060200260200182016040528015611c7957816020015b611c66612903565b815260200190600190039081611c5e5790505b50905060005b82811015611ddc5760008681526002602090815260408083206001600160a01b03891684529091529020805482908110611cbb57611cbb612d71565b60009182526020918290206040805160e081018252600690930290910180548352600181015493830193909352600283015490820152600382015460608201526004820154608082015260059091015460ff808216151560a084015261010090910416151560c08201528251839083908110611d3957611d39612d71565b602002602001015160000181905250818181518110611d5a57611d5a612d71565b60200260200101516000015160a00151611dca5760008681526002602090815260408083206001600160a01b038916845290915290208054611da7919083908110611afe57611afe612d71565b828281518110611db957611db9612d71565b602002602001015160200181815250505b80611dd481612e54565b915050611c7f565b50949350505050565b60018181548110611df557600080fd5b60009182526020909120600c9091020180546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b909b015460ff909a169b50979996989597949693959294919390928c565b6000611e6481612208565b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000611ebb81612208565b506006805460ff1916911515919091179055565b60008181526002602090815260408083203384529091528120905b815481101561160857818181548110611f0557611f05612d71565b600091825260209091206005600690920201015460ff16158015611f4c575042828281548110611f3757611f37612d71565b90600052602060002090600602016002015411155b15611f5b57611f5b83826117d8565b80611f6581612e54565b915050611eea565b6000805b600154811015611fa557611f858184612033565b15611f935750600192915050565b80611f9d81612e54565b915050611f71565b50600092915050565b600060035460018481548110611fc657611fc6612d71565b90600052602060002090600c02016004015483611fe39190612d9d565b611fed9190612e6f565b9392505050565b6000611fff81612208565b50600780546001600160a01b0319166001600160a01b0392909216919091179055565b600061202d81612208565b50600355565b60009182526002602090815260408084206001600160a01b03939093168452919052902060010154421090565b600061206b81612208565b816001848154811061207f5761207f612d71565b90600052602060002090600c020160030181905550505050565b60006120a481612208565b81600184815481106120b8576120b8612d71565b90600052602060002090600c020160020181905550505050565b60006120dd81612208565b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60008281526020819052604090206001015461211b81612208565b6116088383612600565b600061213081612208565b50600a80546001600160a01b0319166001600160a01b0392909216919091179055565b600061215e81612208565b50600455565b6121986040518060a00160405280600081526020016000815260200160008152602001600015158152602001600081525090565b60008381526002602081815260408084206001600160a01b03871685528252808420815160a0810183529381015484526003810154928401929092526004820154908301529190606081016121ed8787612033565b15158152600190930154602090930192909252509392505050565b6122128133612703565b50565b6008546040805163070d451f60e01b815290516000926001600160a01b03169163070d451f9160048083019260209291908290030181865afa15801561225f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122839190612deb565b90508360015b82811161257357600854604051631b0a264d60e11b81526001600160a01b03848116600483015260009216906336144c9a90602401602060405180830381865afa1580156122db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ff9190612e21565b90506001600160a01b0381161561255a576008546040516303fea6cb60e11b81526001600160a01b038381166004830152602482018590526000926001929116906307fd4d9690604401602060405180830381865afa158015612366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238a9190612e04565b15612464576008546040516384197dbb60e01b8152600481018a9052602481018690526001600160a01b03909116906384197dbb90604401602060405180830381865afa1580156123df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124039190612deb565b60008b81526002602090815260408083206001600160a01b03881684529091529020600301549092508061243a5760029150612450565b8083111561244b5760039150612450565b600091505b8083111561245e5780612460565b825b9250505b6008546040805160e0810182526001600160a01b038681168252602082018690528c81168284015260608201889052608082018b905260a082018e905260c082018590529151639581f52760e01b81529190921691639581f5279161251e919060040181516001600160a01b0390811682526020808401519083015260408084015190911690820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b600060405180830381600087803b15801561253857600080fd5b505af115801561254c573d6000803e3d6000fd5b505050508294505050612560565b50612573565b508061256b81612e54565b915050612289565b50505050505050565b6125868282611e87565b6116c0576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556125bc3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61260a8282611e87565b156116c0576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600081600101546000148061267e5750600582015460ff165b1561268b57506000919050565b6005820154600090610100900460ff166126b557600483015483546126b09190612dbc565b6126bb565b82600401545b9050428360020154116126ce5792915050565b826001015483600201546126e29190612dd4565b8184600101546126ef4290565b6126f99190612dd4565b611fe39190612d9d565b61270d8282611e87565b6116c057612725816001600160a01b03166014612767565b612730836020612767565b604051602001612741929190612ec1565b60408051601f198184030181529082905262461bcd60e51b825261076291600401612f36565b60606000612776836002612d9d565b612781906002612dbc565b67ffffffffffffffff81111561279957612799612e3e565b6040519080825280601f01601f1916602001820160405280156127c3576020820181803683370190505b509050600360fc1b816000815181106127de576127de612d71565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061280d5761280d612d71565b60200101906001600160f81b031916908160001a9053506000612831846002612d9d565b61283c906001612dbc565b90505b60018111156128b4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061287057612870612d71565b1a60f81b82828151811061288657612886612d71565b60200101906001600160f81b031916908160001a90535060049490941c936128ad81612f69565b905061283f565b508315611fed5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610762565b60405180604001604052806129526040518060e0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b8152602001600081525090565b60006020828403121561297157600080fd5b81356001600160e01b031981168114611fed57600080fd5b6001600160a01b038116811461221257600080fd5b6000602082840312156129b057600080fd5b8135611fed81612989565b6000602082840312156129cd57600080fd5b5035919050565b600080604083850312156129e757600080fd5b8235915060208301356129f981612989565b809150509250929050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a0810151151560a083015260c0810151151560c08301525050565b6020808252825182820181905260009190848201906040850190845b81811015612a8e57612a7b838551612a04565b9284019260e09290920191600101612a68565b50909695505050505050565b60008060008060808587031215612ab057600080fd5b5050823594602084013594506040840135936060013592509050565b801515811461221257600080fd5b60008060408385031215612aed57600080fd5b8235915060208301356129f981612acc565b60008060008060808587031215612b1557600080fd5b84359350602085013592506040850135612b2e81612acc565b91506060850135612b3e81612989565b939692955090935050565b60008060408385031215612b5c57600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015612c1957815180511515855280870151858801528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e0808201519086015261010080820151908601526101208082015190860152610140808201519086015261016090810151908501526101809093019290850190600101612b88565b5091979650505050505050565b600080600060608486031215612c3b57600080fd5b833592506020840135612c4d81612989565b929592945050506040919091013590565b6020808252825182820181905260009190848201906040850190845b81811015612a8e57612cba838551805182526020810151602083015260408101516040830152606081015115156060830152608081015160808301525050565b9284019260a09290920191600101612c7a565b6020808252825182820181905260009190848201906040850190845b81811015612a8e578351612cfe848251612a04565b85015160e08401529284019261010090920191600101612ce9565b600060208284031215612d2b57600080fd5b8135611fed81612acc565b60a081016106b38284805182526020810151602083015260408101516040830152606081015115156060830152608081015160808301525050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612db757612db7612d87565b500290565b60008219821115612dcf57612dcf612d87565b500190565b600082821015612de657612de6612d87565b500390565b600060208284031215612dfd57600080fd5b5051919050565b600060208284031215612e1657600080fd5b8151611fed81612acc565b600060208284031215612e3357600080fd5b8151611fed81612989565b634e487b7160e01b600052604160045260246000fd5b6000600019821415612e6857612e68612d87565b5060010190565b600082612e8c57634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015612eac578181015183820152602001612e94565b83811115612ebb576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612ef9816017850160208801612e91565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612f2a816028840160208801612e91565b01602801949350505050565b6020815260008251806020840152612f55816040850160208701612e91565b601f01601f19169190910160400192915050565b600081612f7857612f78612d87565b50600019019056fea2646970667358221220b75180131e56aafc3060ce5d3225162dd3225065e8cf84390400c70cee2261ed64736f6c634300080b0033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token1_: PromiseOrValue<string>,
    token2_: PromiseOrValue<string>,
    rewardPool_: PromiseOrValue<string>,
    referralManager_: PromiseOrValue<string>,
    squadsManager_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      token1_,
      token2_,
      rewardPool_,
      referralManager_,
      squadsManager_,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    token1_: PromiseOrValue<string>,
    token2_: PromiseOrValue<string>,
    rewardPool_: PromiseOrValue<string>,
    referralManager_: PromiseOrValue<string>,
    squadsManager_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token1_,
      token2_,
      rewardPool_,
      referralManager_,
      squadsManager_,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
