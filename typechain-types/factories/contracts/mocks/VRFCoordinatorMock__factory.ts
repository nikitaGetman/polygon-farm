/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VRFCoordinatorMock,
  VRFCoordinatorMockInterface,
} from "../../../contracts/mocks/VRFCoordinatorMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "fulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequestsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "subId",
        type: "uint64",
      },
      {
        internalType: "uint16",
        name: "minimumRequestConfirmations",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "contract VRFConsumerBaseV2",
        name: "sender",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_randomWords",
        type: "uint256[]",
      },
    ],
    name: "setRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105b4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80635d3b1d301461006757806381d12c581461008d5780639a91eb0d146100b8578063beff730f146100cd578063c0be1b99146100e0578063c8cf4722146100f3575b600080fd5b61007a61007536600461038d565b6100fb565b6040519081526020015b60405180910390f35b6100a061009b366004610403565b61021e565b6040516001600160a01b039091168152602001610084565b6100cb6100c6366004610403565b61024d565b005b61007a6100db366004610403565b6102dc565b6100cb6100ee366004610432565b6102fd565b60005461007a565b6000806040518060400160405280336001600160a01b03168152602001600180548060200260200160405190810160405280929190818152602001828054801561016457602002820191906000526020600020905b815481526020019060010190808311610150575b50505091909252505060008054600181018255908052815160029091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810180546001600160a01b039093166001600160a01b031990931692909217825560208084015180519495508594610201937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56401929190910190610314565b505060005461021391506001906104f0565b979650505050505050565b6000818154811061022e57600080fd5b60009182526020909120600290910201546001600160a01b0316905081565b600080828154811061026157610261610515565b600091825260209091206002909102018054604051631fe543e360e01b81529192506001600160a01b031690631fe543e3906102a6908590600186019060040161052b565b600060405180830381600087803b1580156102c057600080fd5b505af11580156102d4573d6000803e3d6000fd5b505050505050565b600181815481106102ec57600080fd5b600091825260209091200154905081565b8051610310906001906020840190610314565b5050565b82805482825590600052602060002090810192821561034f579160200282015b8281111561034f578251825591602001919060010190610334565b5061035b92915061035f565b5090565b5b8082111561035b5760008155600101610360565b803563ffffffff8116811461038857600080fd5b919050565b600080600080600060a086880312156103a557600080fd5b85359450602086013567ffffffffffffffff811681146103c457600080fd5b9350604086013561ffff811681146103db57600080fd5b92506103e960608701610374565b91506103f760808701610374565b90509295509295909350565b60006020828403121561041557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561044557600080fd5b823567ffffffffffffffff8082111561045d57600080fd5b818501915085601f83011261047157600080fd5b8135818111156104835761048361041c565b8060051b604051601f19603f830116810181811085821117156104a8576104a861041c565b6040529182528482019250838101850191888311156104c657600080fd5b938501935b828510156104e4578435845293850193928501926104cb565b98975050505050505050565b60008282101561051057634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b60006040820184835260206040818501528185548084526060860191508660005282600020935060005b8181101561057157845483526001948501949284019201610555565b509097965050505050505056fea2646970667358221220eb6b892544ddc18e45ac100b47297cead29a6aa72f164ca5209a504ffa29867664736f6c634300080b0033";

type VRFCoordinatorMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFCoordinatorMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFCoordinatorMock__factory extends ContractFactory {
  constructor(...args: VRFCoordinatorMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VRFCoordinatorMock> {
    return super.deploy(overrides || {}) as Promise<VRFCoordinatorMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VRFCoordinatorMock {
    return super.attach(address) as VRFCoordinatorMock;
  }
  override connect(signer: Signer): VRFCoordinatorMock__factory {
    return super.connect(signer) as VRFCoordinatorMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFCoordinatorMockInterface {
    return new utils.Interface(_abi) as VRFCoordinatorMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFCoordinatorMock {
    return new Contract(address, _abi, signerOrProvider) as VRFCoordinatorMock;
  }
}
