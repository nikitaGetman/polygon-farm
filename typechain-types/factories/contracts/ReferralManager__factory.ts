/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ReferralManager,
  ReferralManagerInterface,
} from "../../contracts/ReferralManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "subscriptionToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardPool_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fullSubscriptionCost_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "levelSubscriptionCost_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "referral",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakingPlanId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reason",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DividendsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "ReferralAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "levels",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Subscribed",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LEVELS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "REFERRAL_PERCENTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBSCRIPTION_PERIOD_DAYS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referral",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakingPlanId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reason",
            type: "uint256",
          },
        ],
        internalType: "struct IReferralManager.AddDividendsParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "addUserDividends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "authorizeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "calculateRefReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claimDividends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fullSubscriptionCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReferralLevels",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUser1LvlReferrals",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserInfo",
    outputs: [
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        internalType: "uint256[10]",
        name: "activeLevels",
        type: "uint256[10]",
      },
      {
        internalType: "uint256",
        name: "totalDividends",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalClaimedDividends",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "referrals_1_lvl",
        type: "address[]",
      },
      {
        internalType: "uint256[10]",
        name: "refCount",
        type: "uint256[10]",
      },
      {
        internalType: "uint256",
        name: "totalReferrals",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActiveSubscriber",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "activationDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "getUserReferralsByLevel",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "referralAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activationDate",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isReferralSubscriptionActive",
            type: "bool",
          },
        ],
        internalType: "struct IReferralManager.Referral[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserReferrer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levelSubscriptionCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "removeContractAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "setMyReferrer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "setUserReferrer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscribeToAllLevels",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "subscribeToLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionToken",
    outputs: [
      {
        internalType: "contract ERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    name: "updateFullSubscriptionCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    name: "updateLevelSubscriptionCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "updateReferralPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    name: "updateRewardPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "updateRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "durationDays",
        type: "uint256",
      },
    ],
    name: "updateSubscriptionPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "updateSubscriptionToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "userHasAnySubscription",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "userHasSubscription",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61016d6001556101c060405260646080908152605a60a052605060c052604660e052603c61010052603261012052602861014052601e61016052601461018052600a6101a08190526200005591600291620001d9565b503480156200006357600080fd5b50604051620021f3380380620021f3833981016040819052620000869162000262565b6001600160a01b0385166200009a57600080fd5b6001600160a01b038416620000ae57600080fd5b6001600160a01b038316620000c257600080fd5b60008211620000d057600080fd5b60008111620000de57600080fd5b620000eb60003362000138565b600780546001600160a01b03199081166001600160a01b039788161790915560088054821695871695909517909455600980549094169290941691909117909155600455600355620002bf565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620001d5576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001943390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b8280548282559060005260206000209081019282156200021c579160200282015b828111156200021c578251829060ff16905591602001919060010190620001fa565b506200022a9291506200022e565b5090565b5b808211156200022a57600081556001016200022f565b80516001600160a01b03811681146200025d57600080fd5b919050565b600080600080600060a086880312156200027b57600080fd5b620002868662000245565b9450620002966020870162000245565b9350620002a66040870162000245565b6060870151608090970151959894975095949392505050565b611f2480620002cf6000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c806391d148541161013b578063d547741f116100b8578063e39092ba1161007c578063e39092ba14610501578063f7c618c114610514578063f8cf31cb14610527578063f8d0e6ec1461053a578063fe9fbb801461054d57600080fd5b8063d547741f146104ad578063d5fbac3a146104c0578063d6672e1c146104d3578063dc6492a5146104e6578063e2adba8c146104f957600080fd5b8063aaa138a2116100ff578063aaa138a214610455578063acb101631461045e578063b09b334f14610471578063b32cf5cf14610491578063bd7047c41461049a57600080fd5b806391d14854146104015780639581f527146104145780639d7594a714610427578063a217fddf1461043a578063a243d5ac1461044257600080fd5b80635919adac116101c95780637f24f0f21161018d5780637f24f0f2146103aa57806384197dbb146103bd57806389b684f5146103d05780638ebb3c81146103d957806391a9e4a2146103f957600080fd5b80635919adac14610336578063600d20ce146103495780636386c1c71461035c57806367561d9314610384578063736560b51461039757600080fd5b8063188ec35611610210578063188ec356146102a3578063248a9ca3146102a95780632f2ff15d146102cc57806336144c9a146102df57806336568abe1461032357600080fd5b806301ffc9a714610242578063070d451f1461026a57806307fd4d961461027b5780630dcb3c8a1461028e575b600080fd5b6102556102503660046119f8565b610579565b60405190151581526020015b60405180910390f35b600a5b604051908152602001610261565b610255610289366004611a3e565b6105b0565b6102a161029c366004611a68565b6105f5565b005b4261026d565b61026d6102b7366004611a68565b60009081526020819052604090206001015490565b6102a16102da366004611a81565b610606565b61030b6102ed366004611aad565b6001600160a01b039081166000908152600560205260409020541690565b6040516001600160a01b039091168152602001610261565b6102a1610331366004611a81565b610630565b6102a1610344366004611aad565b6106b3565b61026d610357366004611a68565b6106c0565b61036f61036a366004611aad565b6106e1565b60405161026199989796959493929190611b35565b6102a1610392366004611aad565b610824565b6102a16103a5366004611a68565b610854565b6102a16103b8366004611aad565b610865565b61026d6103cb366004611ba8565b610892565b61026d60035481565b6103ec6103e7366004611aad565b6108f4565b6040516102619190611bca565b6102a161096d565b61025561040f366004611a81565b610abb565b6102a1610422366004611bf3565b610ae4565b6102a1610435366004611a68565b610bf7565b61026d600081565b6102a1610450366004611aad565b610e2e565b61026d60015481565b6102a161046c366004611a68565b610e5c565b61048461047f366004611a3e565b610e6d565b6040516102619190611c91565b61026d60045481565b6102a16104a8366004611a68565b610e7b565b6102a16104bb366004611a81565b610f8e565b6102a16104ce366004611aad565b610fb3565b60075461030b906001600160a01b031681565b6102a16104f4366004611ba8565b610fe1565b61026d600a81565b61025561050f366004611aad565b611036565b60085461030b906001600160a01b031681565b6102a1610535366004611aad565b611076565b6102a1610548366004611d00565b6110a4565b61025561055b366004611aad565b6001600160a01b031660009081526006602052604090205460ff1690565b60006001600160e01b03198216637965db0b60e01b14806105aa57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000426001600160a01b03841660009081526005602052604090206001908101906105db9085611d40565b600a81106105eb576105eb611d57565b0154119392505050565b6000610600816110fc565b50600355565b600082815260208190526040902060010154610621816110fc565b61062b8383611106565b505050565b6001600160a01b03811633146106a55760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106af828261118a565b5050565b6106bd33826111ef565b50565b600281815481106106d057600080fd5b600091825260209091200154905081565b60006106eb6119d9565b60008060606106f86119d9565b6001600160a01b0387811660009081526005602052604080822080548251610140810193849052941699509192839283929091906001830190600a9082845b815481526020019060010190808311610737575050505050985080600b0154975080600c0154965080600d018054806020026020016040519081016040528092919081815260200182805480156107b757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610799575b505060408051610140810191829052949a50600e86019350600a9250905082845b8154815260200190600101908083116107d857505050505094506107fd8b600061152f565b60188201546019909201549a9c999b509799969895979496949560ff909116949350915050565b600061082f816110fc565b506001600160a01b03166000908152600660205260409020805460ff19166001179055565b600061085f816110fc565b50600155565b6000610870816110fc565b506001600160a01b03166000908152600660205260409020805460ff19169055565b60008082116108a057600080fd5b600a8211156108ae57600080fd5b606460026108bd600185611d40565b815481106108cd576108cd611d57565b9060005260206000200154846108e39190611d6d565b6108ed9190611d8c565b9392505050565b6001600160a01b038116600090815260056020908152604091829020600d0180548351818402810184019094528084526060939283018282801561096157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610943575b50505050509050919050565b6000336007546004805460405163079cc67960e41b81526001600160a01b0380861693820193909352602481019190915292935016906379cc679090604401600060405180830381600087803b1580156109c657600080fd5b505af11580156109da573d6000803e3d6000fd5b505050506000600154620151806109f19190611d6d565b6109fb9042611dae565b905060005b600a811015610a4b576001600160a01b0383166000908152600560205260409020829060010182600a8110610a3757610a37611d57565b015580610a4381611dc6565b915050610a00565b506001600160a01b0382166000818152600560205260409020601801805460ff191660019081179091554291907ff94991dcbea6e8ac439cbc93bd9c62a4d39f04e0ad656df9a703f13552c2787f90610aa690600a90611dae565b60405190815260200160405180910390a35050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610aed3361055b565b610b325760405162461bcd60e51b81526020600482015260166024820152751059191c995cdcc81b9bdd08185d5d1a1bdc9a5e995960521b604482015260640161069c565b60208082015182516001600160a01b03166000908152600590925260408220600b01805491929091610b65908490611dae565b92505081905550806060015181604001516001600160a01b031682600001516001600160a01b03167f71e87ac6e13bd74c97691b2342cbc5cb5ca3bdf594c00dd1357f7cfbe6645a16846080015185602001518660a001518760c00151610bc94290565b604080519586526020860194909452928401919091526060830152608082015260a00160405180910390a450565b60008111610c375760405162461bcd60e51b815260206004820152600d60248201526c151bdbc81b1bddc81b195d995b609a1b604482015260640161069c565b600a811115610c785760405162461bcd60e51b815260206004820152600d60248201526c151bdbc8189a59c81b195d995b609a1b604482015260640161069c565b60003360075460035460405163079cc67960e41b81526001600160a01b038085166004830152602482019290925292935016906379cc679090604401600060405180830381600087803b158015610cce57600080fd5b505af1158015610ce2573d6000803e3d6000fd5b505050506000610cef4290565b6001600160a01b0383166000908152600560205260409020600190810190610d179086611d40565b600a8110610d2757610d27611d57565b015410610d6d576001600160a01b0382166000908152600560205260409020600190810190610d569085611d40565b600a8110610d6657610d66611d57565b0154610d6f565b425b905060015462015180610d829190611d6d565b610d8c9082611dae565b6001600160a01b0383166000908152600560205260409020600190810190610db49086611d40565b600a8110610dc457610dc4611d57565b01556001600160a01b03821660008181526005602052604090819020601801805460ff19166001179055518291907ff94991dcbea6e8ac439cbc93bd9c62a4d39f04e0ad656df9a703f13552c2787f90610e219087815260200190565b60405180910390a3505050565b6000610e39816110fc565b50600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000610e67816110fc565b50600455565b60606108ed8383600161159a565b336000908152600560205260409020600c810154600b8201548391610e9f91611d40565b1015610ee35760405162461bcd60e51b8152602060048201526013602482015272125b9cdd59999a58da595b9d08185b5bdd5b9d606a1b604482015260640161069c565b8181600c016000828254610ef79190611dae565b90915550506008546009546001600160a01b03918216916323b872dd9116336040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018590526064016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190611de1565b600082815260208190526040902060010154610fa9816110fc565b61062b838361118a565b6000610fbe816110fc565b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b6000610fec816110fc565b60008311610ff957600080fd5b600a83111561100757600080fd5b816002611015600186611d40565b8154811061102557611025611d57565b600091825260209091200155505050565b600060015b600a811161106d5761104d83826105b0565b1561105b5750600192915050565b8061106581611dc6565b91505061103b565b50600092915050565b6000611081816110fc565b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b6110ad3361055b565b6110f25760405162461bcd60e51b81526020600482015260166024820152751059191c995cdcc81b9bdd08185d5d1a1bdc9a5e995960521b604482015260640161069c565b6106af82826111ef565b6106bd81336117d9565b6111108282610abb565b6106af576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556111463390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6111948282610abb565b156106af576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b03821661123c5760405162461bcd60e51b815260206004820152601460248201527355736572206973207a65726f206164647265737360601b604482015260640161069c565b6001600160a01b0381166112925760405162461bcd60e51b815260206004820152601860248201527f5265666572726572206973207a65726f20616464726573730000000000000000604482015260640161069c565b816001600160a01b0316816001600160a01b031614156112f45760405162461bcd60e51b815260206004820152601860248201527f52656665727265722063616e206e6f7420626520757365720000000000000000604482015260640161069c565b6001600160a01b03828116600090815260056020526040902054161561135c5760405162461bcd60e51b815260206004820152601d60248201527f526566657272657220697320616c726561647920737065636966696564000000604482015260640161069c565b6113678160016105b0565b6113b35760405162461bcd60e51b815260206004820152601c60248201527f526566657272657220686173206e6f20737562736372697074696f6e00000000604482015260640161069c565b6001600160a01b03828116600081815260056020908152604080832080549587166001600160a01b0319968716811782554260199092019190915583528220600d01805460018101825590835290822001805490931690911790915581905b600a8110156114e957836001600160a01b0316826001600160a01b0316141561146d5760405162461bcd60e51b815260206004820152600d60248201526c4379636c696320636861696e2160981b604482015260640161069c565b6001600160a01b0382166000908152600560205260409020601881015460ff16156114d057600181600e0183600a81106114a9576114a9611d57565b0160008282546114b99190611dae565b909155505080546001600160a01b031692506114d6565b506114e9565b50806114e181611dc6565b915050611412565b50826001600160a01b0316826001600160a01b03167f3f6a300e641007b6c88b17485d36e2d83c20409a1c5e79bfa1f4eb69ea09469560405160405180910390a3505050565b6001600160a01b038216600090815260056020526040812081805b61155585600a611d40565b8110156115915782600e0181600a811061157157611571611d57565b015461157d9083611dae565b91508061158981611dc6565b91505061154a565b50949350505050565b6060828211156115e45760405162461bcd60e51b815260206004820152601560248201527410dd5c9c995b9d081b195d995b080f881b195d995b605a1b604482015260640161069c565b60006115ef856108f4565b6001600160a01b038616600090815260056020526040812091925090600e016116188587611d40565b600a811061162857611628611d57565b0154905060008167ffffffffffffffff81111561164757611647611bdd565b60405190808252806020026020018201604052801561169957816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816116655790505b5090506000805b84518110156117cc5760008582815181106116bd576116bd611d57565b602002602001015190508888141561173957604080516080810182526001600160a01b03831680825260208083018c905260009182526005905282902060190154918101919091526060810161171283611036565b151581525084838151811061172957611729611d57565b60200260200101819052506117b9565b6000611750828b61174b8c6001611dae565b61159a565b905060005b81518110156117b65781818151811061177057611770611d57565b602002602001015186868151811061178a5761178a611d57565b602002602001018190525084806117a090611dc6565b95505080806117ae90611dc6565b915050611755565b50505b50806117c481611dc6565b9150506116a0565b5090979650505050505050565b6117e38282610abb565b6106af576117fb816001600160a01b0316601461183d565b61180683602061183d565b604051602001611817929190611e2f565b60408051601f198184030181529082905262461bcd60e51b825261069c91600401611ea4565b6060600061184c836002611d6d565b611857906002611dae565b67ffffffffffffffff81111561186f5761186f611bdd565b6040519080825280601f01601f191660200182016040528015611899576020820181803683370190505b509050600360fc1b816000815181106118b4576118b4611d57565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106118e3576118e3611d57565b60200101906001600160f81b031916908160001a9053506000611907846002611d6d565b611912906001611dae565b90505b600181111561198a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061194657611946611d57565b1a60f81b82828151811061195c5761195c611d57565b60200101906001600160f81b031916908160001a90535060049490941c9361198381611ed7565b9050611915565b5083156108ed5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161069c565b604051806101400160405280600a906020820280368337509192915050565b600060208284031215611a0a57600080fd5b81356001600160e01b0319811681146108ed57600080fd5b80356001600160a01b0381168114611a3957600080fd5b919050565b60008060408385031215611a5157600080fd5b611a5a83611a22565b946020939093013593505050565b600060208284031215611a7a57600080fd5b5035919050565b60008060408385031215611a9457600080fd5b82359150611aa460208401611a22565b90509250929050565b600060208284031215611abf57600080fd5b6108ed82611a22565b8060005b600a811015611aeb578151845260209384019390910190600101611acc565b50505050565b600081518084526020808501945080840160005b83811015611b2a5781516001600160a01b031687529582019590820190600101611b05565b509495945050505050565b6001600160a01b038a1681526000610360611b53602084018c611ac8565b8961016084015288610180840152806101a0840152611b7481840189611af1565b915050611b856101c0830187611ac8565b610300820194909452911515610320830152610340909101529695505050505050565b60008060408385031215611bbb57600080fd5b50508035926020909101359150565b6020815260006108ed6020830184611af1565b634e487b7160e01b600052604160045260246000fd5b600060e08284031215611c0557600080fd5b60405160e0810181811067ffffffffffffffff82111715611c3657634e487b7160e01b600052604160045260246000fd5b604052611c4283611a22565b815260208301356020820152611c5a60408401611a22565b6040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201528091505092915050565b602080825282518282018190526000919060409081850190868401855b82811015611cf357815180516001600160a01b031685528681015187860152858101518686015260609081015115159085015260809093019290850190600101611cae565b5091979650505050505050565b60008060408385031215611d1357600080fd5b611d1c83611a22565b9150611aa460208401611a22565b634e487b7160e01b600052601160045260246000fd5b600082821015611d5257611d52611d2a565b500390565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615611d8757611d87611d2a565b500290565b600082611da957634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611dc157611dc1611d2a565b500190565b6000600019821415611dda57611dda611d2a565b5060010190565b600060208284031215611df357600080fd5b815180151581146108ed57600080fd5b60005b83811015611e1e578181015183820152602001611e06565b83811115611aeb5750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611e67816017850160208801611e03565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611e98816028840160208801611e03565b01602801949350505050565b6020815260008251806020840152611ec3816040850160208701611e03565b601f01601f19169190910160400192915050565b600081611ee657611ee6611d2a565b50600019019056fea26469706673582212201bc0119991fa22b2081d7e5336635199fdc9e0f298646c9fe2c194a8d79347b364736f6c634300080b0033";

type ReferralManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReferralManager__factory extends ContractFactory {
  constructor(...args: ReferralManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    subscriptionToken_: PromiseOrValue<string>,
    rewardToken_: PromiseOrValue<string>,
    rewardPool_: PromiseOrValue<string>,
    fullSubscriptionCost_: PromiseOrValue<BigNumberish>,
    levelSubscriptionCost_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReferralManager> {
    return super.deploy(
      subscriptionToken_,
      rewardToken_,
      rewardPool_,
      fullSubscriptionCost_,
      levelSubscriptionCost_,
      overrides || {}
    ) as Promise<ReferralManager>;
  }
  override getDeployTransaction(
    subscriptionToken_: PromiseOrValue<string>,
    rewardToken_: PromiseOrValue<string>,
    rewardPool_: PromiseOrValue<string>,
    fullSubscriptionCost_: PromiseOrValue<BigNumberish>,
    levelSubscriptionCost_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionToken_,
      rewardToken_,
      rewardPool_,
      fullSubscriptionCost_,
      levelSubscriptionCost_,
      overrides || {}
    );
  }
  override attach(address: string): ReferralManager {
    return super.attach(address) as ReferralManager;
  }
  override connect(signer: Signer): ReferralManager__factory {
    return super.connect(signer) as ReferralManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralManagerInterface {
    return new utils.Interface(_abi) as ReferralManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReferralManager {
    return new Contract(address, _abi, signerOrProvider) as ReferralManager;
  }
}
