/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Helper, HelperInterface } from "../../contracts/Helper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_referralManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_squads",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "getUserReferralsFullInfoByLevel",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "referralAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activationDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token2Balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isReferralSubscriptionActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isStakingSubscriptionActive",
            type: "bool",
          },
        ],
        internalType: "struct Helper.ReferralFullInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralManager",
    outputs: [
      {
        internalType: "contract IReferralManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "squads",
    outputs: [
      {
        internalType: "contract ISquads",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token2",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referralManager",
        type: "address",
      },
    ],
    name: "updateReferralManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_squads",
        type: "address",
      },
    ],
    name: "updateSquads",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
    ],
    name: "updateStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    name: "updateToken1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
    ],
    name: "updateToken2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c25380380610c2583398101604081905261002f91610106565b6100383361009a565b600180546001600160a01b03199081166001600160a01b0397881617909155600280548216958716959095179094556003805485169386169390931790925560048054841691851691909117905560058054909216921691909117905561016b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461010157600080fd5b919050565b600080600080600060a0868803121561011e57600080fd5b610127866100ea565b9450610135602087016100ea565b9350610143604087016100ea565b9250610151606087016100ea565b915061015f608087016100ea565b90509295509295909350565b610aab8061017a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637c67b3391161008c578063ae1fc32411610066578063ae1fc324146101bf578063cefaefb6146101d2578063d21220a7146101f2578063f2fde38b1461020557600080fd5b80637c67b339146101885780638da5cb5b1461019b578063a345f38d146101ac57600080fd5b80632ccd9623116100c85780632ccd9623146101475780634cf088d91461015a578063715018a61461016d57806378fd90001461017557600080fd5b8063064e6780146100ef578063232b9d901461010457806325be124e14610117575b600080fd5b6101026100fd3660046107ac565b610218565b005b6101026101123660046107ac565b610242565b60025461012a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60045461012a906001600160a01b031681565b60035461012a906001600160a01b031681565b61010261026c565b60055461012a906001600160a01b031681565b6101026101963660046107ac565b610280565b6000546001600160a01b031661012a565b6101026101ba3660046107ac565b6102aa565b6101026101cd3660046107ac565b6102d4565b6101e56101e03660046107d0565b6102fe565b60405161013e91906107fc565b60015461012a906001600160a01b031681565b6101026102133660046107ac565b61066f565b6102206106ed565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61024a6106ed565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6102746106ed565b61027e6000610747565b565b6102886106ed565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6102b26106ed565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6102dc6106ed565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6004805460405163b09b334f60e01b81526001600160a01b038581169382019390935260248101849052606092600092169063b09b334f90604401600060405180830381865afa158015610356573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261037e9190810190610910565b90506000815167ffffffffffffffff81111561039c5761039c61088b565b60405190808252806020026020018201604052801561041a57816020015b6104076040518060e0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b8152602001906001900390816103ba5790505b50905060005b825181101561066657600083828151811061043d5761043d610a02565b60200260200101516000015190506040518060e00160405280826001600160a01b0316815260200185848151811061047757610477610a02565b602002602001015160200151815260200185848151811061049a5761049a610a02565b602090810291909101810151604090810151835260015490516370a0823160e01b81526001600160a01b038681166004830152939092019216906370a0823190602401602060405180830381865afa1580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e9190610a18565b81526002546040516370a0823160e01b81526001600160a01b038581166004830152602090930192909116906370a0823190602401602060405180830381865afa158015610570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105949190610a18565b81526020018584815181106105ab576105ab610a02565b6020908102919091018101516060015115158252600354604051632b58a66f60e21b81526001600160a01b0386811660048301529390920192169063ad6299bc90602401602060405180830381865afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106309190610a31565b151581525083838151811061064757610647610a02565b602002602001018190525050808061065e90610a4c565b915050610420565b50949350505050565b6106776106ed565b6001600160a01b0381166106e15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6106ea81610747565b50565b6000546001600160a01b0316331461027e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146106ea57600080fd5b6000602082840312156107be57600080fd5b81356107c981610797565b9392505050565b600080604083850312156107e357600080fd5b82356107ee81610797565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b8281101561087e57815180516001600160a01b0316855286810151878601528581015186860152606080820151908601526080808201519086015260a08082015115159086015260c09081015115159085015260e09093019290850190600101610819565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156108c4576108c461088b565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108f3576108f361088b565b604052919050565b8051801515811461090b57600080fd5b919050565b6000602080838503121561092357600080fd5b825167ffffffffffffffff8082111561093b57600080fd5b818501915085601f83011261094f57600080fd5b8151818111156109615761096161088b565b61096f848260051b016108ca565b818152848101925060079190911b83018401908782111561098f57600080fd5b928401925b818410156109f757608084890312156109ad5760008081fd5b6109b56108a1565b84516109c081610797565b815284860151868201526040808601519082015260606109e18187016108fb565b9082015283526080939093019291840191610994565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a2a57600080fd5b5051919050565b600060208284031215610a4357600080fd5b6107c9826108fb565b6000600019821415610a6e57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220d3c21db2675bcbe5ea51129a39e34b6ba8eb2e1c67e7134ba81c79fc5cee4e4264736f6c634300080b0033";

type HelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Helper__factory extends ContractFactory {
  constructor(...args: HelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token1: PromiseOrValue<string>,
    _token2: PromiseOrValue<string>,
    _staking: PromiseOrValue<string>,
    _referralManager: PromiseOrValue<string>,
    _squads: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Helper> {
    return super.deploy(
      _token1,
      _token2,
      _staking,
      _referralManager,
      _squads,
      overrides || {}
    ) as Promise<Helper>;
  }
  override getDeployTransaction(
    _token1: PromiseOrValue<string>,
    _token2: PromiseOrValue<string>,
    _staking: PromiseOrValue<string>,
    _referralManager: PromiseOrValue<string>,
    _squads: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token1,
      _token2,
      _staking,
      _referralManager,
      _squads,
      overrides || {}
    );
  }
  override attach(address: string): Helper {
    return super.attach(address) as Helper;
  }
  override connect(signer: Signer): Helper__factory {
    return super.connect(signer) as Helper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelperInterface {
    return new utils.Interface(_abi) as HelperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Helper {
    return new Contract(address, _abi, signerOrProvider) as Helper;
  }
}
